{
    "props-token-distribution-e5ce0b2df1fbe108458d86820da578db56ac28d1/contracts/token/IERC865.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_5"
            ],
            "vulnerability_findings": [
                {
                    "name": "external-function",
                    "vulnerability_from_line": 16,
                    "vulnerability_to_line": 24,
                    "vulnerability_code": "    function transferPreSigned(\n\n        bytes _signature,\n\n        address _to,\n\n        uint256 _value,\n\n        uint256 _fee,\n\n        uint256 _nonce\n\n    )\n\n        public\n",
                    "message": "IERC865.transferPreSigned (IERC865.sol#16-24) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 26,
                    "vulnerability_to_line": 34,
                    "vulnerability_code": "    function approvePreSigned(\n\n        bytes _signature,\n\n        address _spender,\n\n        uint256 _value,\n\n        uint256 _fee,\n\n        uint256 _nonce\n\n    )\n\n        public\n",
                    "message": "IERC865.approvePreSigned (IERC865.sol#26-34) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 36,
                    "vulnerability_to_line": 44,
                    "vulnerability_code": "    function increaseAllowancePreSigned(\n\n        bytes _signature,\n\n        address _spender,\n\n        uint256 _addedValue,\n\n        uint256 _fee,\n\n        uint256 _nonce\n\n    )\n\n        public\n",
                    "message": "IERC865.increaseAllowancePreSigned (IERC865.sol#36-44) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 46,
                    "vulnerability_to_line": 54,
                    "vulnerability_code": "    function decreaseAllowancePreSigned(\n\n        bytes _signature,\n\n        address _spender,\n\n        uint256 _subtractedValue,\n\n        uint256 _fee,\n\n        uint256 _nonce\n\n    )\n\n        public\n",
                    "message": "IERC865.decreaseAllowancePreSigned (IERC865.sol#46-54) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 56,
                    "vulnerability_to_line": 65,
                    "vulnerability_code": "    function transferFromPreSigned(\n\n        bytes _signature,\n\n        address _from,\n\n        address _to,\n\n        uint256 _value,\n\n        uint256 _fee,\n\n        uint256 _nonce\n\n    )\n\n        public\n",
                    "message": "IERC865.transferFromPreSigned (IERC865.sol#56-65) should be declared external\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity ^0.4.24;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 17,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        bytes _signature,\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 27,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        bytes _signature,\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 37,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        bytes _signature,\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 47,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        bytes _signature,\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 57,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        bytes _signature,\n",
                    "message": null
                }
            ]
        }
    },
    "props-token-distribution-e5ce0b2df1fbe108458d86820da578db56ac28d1/pending-contracts/tpl/ExtendedJurisdictionInterface.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_5"
            ],
            "vulnerability_findings": [
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 51,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  function addRestrictedAttributeType(uint256 ID, string description) external;\n",
                    "message": "Parameter 'ID' of ExtendedJurisdictionInterface.addRestrictedAttributeType (ExtendedJurisdictionInterface.sol#51) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 60,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  function setAttributeTypeOnlyPersonal(uint256 ID, bool onlyPersonal) external;\n",
                    "message": "Parameter 'ID' of ExtendedJurisdictionInterface.setAttributeTypeOnlyPersonal (ExtendedJurisdictionInterface.sol#60) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 76,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256 ID,\n",
                    "message": "Parameter 'ID' of ExtendedJurisdictionInterface.setAttributeTypeSecondarySource (ExtendedJurisdictionInterface.sol#76) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 93,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256 ID,\n",
                    "message": "Parameter 'ID' of ExtendedJurisdictionInterface.setAttributeTypeMinimumRequiredStake (ExtendedJurisdictionInterface.sol#93) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 106,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  function setAttributeTypeJurisdictionFee(uint256 ID, uint256 fee) external;\n",
                    "message": "Parameter 'ID' of ExtendedJurisdictionInterface.setAttributeTypeJurisdictionFee (ExtendedJurisdictionInterface.sol#106) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity ^0.4.24;\n",
                    "message": null
                }
            ]
        }
    },
    "props-token-distribution-e5ce0b2df1fbe108458d86820da578db56ac28d1/pending-contracts/tpl/BasicJurisdictionInterface.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_2"
            ],
            "vulnerability_findings": [
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 51,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  function addAttributeType(uint256 ID, string description) external;\n",
                    "message": "Parameter 'ID' of BasicJurisdictionInterface.addAttributeType (BasicJurisdictionInterface.sol#51) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 59,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  function removeAttributeType(uint256 ID) external;\n",
                    "message": "Parameter 'ID' of BasicJurisdictionInterface.removeAttributeType (BasicJurisdictionInterface.sol#59) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity ^0.4.25;\n",
                    "message": null
                }
            ]
        }
    },
    "props-token-distribution-e5ce0b2df1fbe108458d86820da578db56ac28d1/pending-contracts/tpl/AttributeRegistryInterface.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity ^0.4.25;\n",
                    "message": null
                }
            ]
        }
    }
}