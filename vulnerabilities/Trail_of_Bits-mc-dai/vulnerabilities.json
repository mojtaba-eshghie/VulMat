{
    "dss-deploy-4cf50f20e481a0f9026354dd45bd16bcb15e4501/src/tokens.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 22,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor(uint supply) public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 23,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _balances[msg.sender] = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 24,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _supply = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 25,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    }\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 85,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor(uint supply) public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 86,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _balances[msg.sender] = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 87,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _supply = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 88,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    }\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 148,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor(uint supply) public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 149,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _balances[msg.sender] = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 150,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _supply = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 151,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    }\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 205,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor(uint supply) public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 206,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _balances[msg.sender] = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 207,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _supply = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 208,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    }\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 267,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor(uint supply) public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 268,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _balances[msg.sender] = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 269,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _supply = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 270,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    }\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 328,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor(uint supply) public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 329,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _balances[msg.sender] = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 330,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _supply = supply;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 331,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    }\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 7,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x + y) >= x, \"ds-math-add-overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 10,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 46,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(_approvals[src][msg.sender] >= wad, \"ds-token-insufficient-approval\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 50,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_balances[src] >= wad, \"ds-token-insufficient-balance\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 70,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x + y) >= x, \"ds-math-add-overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 73,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 109,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(_approvals[src][msg.sender] >= wad, \"ds-token-insufficient-approval\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 113,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_balances[src] >= wad, \"ds-token-insufficient-balance\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 133,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x + y) >= x, \"ds-math-add-overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 136,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 170,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(_approvals[src][msg.sender] >= wad, \"ds-token-insufficient-approval\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 174,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_balances[src] >= wad, \"ds-token-insufficient-balance\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 190,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x + y) >= x, \"ds-math-add-overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 193,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 229,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(_approvals[src][msg.sender] >= wad, \"ds-token-insufficient-approval\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 233,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_balances[src] >= wad, \"ds-token-insufficient-balance\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 253,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x + y) >= x, \"ds-math-add-overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 256,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 291,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(_approvals[src][msg.sender] >= wad, \"ds-token-insufficient-approval\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 295,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_balances[src] >= wad, \"ds-token-insufficient-balance\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 315,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x + y) >= x, \"ds-math-add-overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 318,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 341,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_balances[msg.sender] >= wad, \"ds-token-insufficient-balance\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_48"
            ],
            "vulnerability_findings": [
                {
                    "name": "erc20-interface",
                    "vulnerability_from_line": 131,
                    "vulnerability_to_line": 186,
                    "vulnerability_code": "contract OMG {\n\n    function add(uint x, uint y) internal pure returns (uint z) {\n\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n\n    }\n\n    event Approval(address indexed src, address indexed guy, uint wad);\n\n    event Transfer(address indexed src, address indexed dst, uint wad);\n\n\n\n    string  public  name = \"OMG\";\n\n    string  public  symbol = \"OMG\";\n\n    uint256  public  decimals = 18;\n\n    uint256                                            _supply;\n\n    mapping (address => uint256)                       _balances;\n\n    mapping (address => mapping (address => uint256))  _approvals;\n\n\n\n    constructor(uint supply) public {\n\n        _balances[msg.sender] = supply;\n\n        _supply = supply;\n\n    }\n\n\n\n    function totalSupply() public view returns (uint) {\n\n        return _supply;\n\n    }\n\n    function balanceOf(address src) public view returns (uint) {\n\n        return _balances[src];\n\n    }\n\n    function allowance(address src, address guy) public view returns (uint) {\n\n        return _approvals[src][guy];\n\n    }\n\n\n\n    function transfer(address dst, uint wad) public {\n\n        transferFrom(msg.sender, dst, wad);\n\n    }\n\n\n\n    function transferFrom(address src, address dst, uint wad) public\n\n    {\n\n        if (src != msg.sender) {\n\n            require(_approvals[src][msg.sender] >= wad, \"ds-token-insufficient-approval\");\n\n            _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);\n\n        }\n\n\n\n        require(_balances[src] >= wad, \"ds-token-insufficient-balance\");\n\n        _balances[src] = sub(_balances[src], wad);\n\n        _balances[dst] = add(_balances[dst], wad);\n\n\n\n        emit Transfer(src, dst, wad);\n\n    }\n\n\n\n    function approve(address guy, uint wad) public {\n\n        _approvals[msg.sender][guy] = wad;\n\n\n\n        emit Approval(msg.sender, guy, wad);\n\n    }\n",
                    "message": "OMG (tokens.sol#131-186) has incorrect ERC20 function interface(s):\n\t-transfer (tokens.sol#163-165)\n\t-transferFrom (tokens.sol#167-179)\n\t-approve (tokens.sol#181-185)\n"
                },
                {
                    "name": "constable-states",
                    "vulnerability_from_line": 200,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256  public  decimals = 18;\n",
                    "message": "BAT.decimals should be constant (tokens.sol#200)\nBAT.name should be constant (tokens.sol#198)\nBAT.symbol should be constant (tokens.sol#199)\nDGD.name should be constant (tokens.sol#261)\nDGD.symbol should be constant (tokens.sol#262)\nGNT.decimals should be constant (tokens.sol#324)\nGNT.name should be constant (tokens.sol#322)\nGNT.symbol should be constant (tokens.sol#323)\nOMG.decimals should be constant (tokens.sol#143)\nOMG.name should be constant (tokens.sol#141)\nOMG.symbol should be constant (tokens.sol#142)\nREP.decimals should be constant (tokens.sol#17)\nREP.name should be constant (tokens.sol#15)\nREP.symbol should be constant (tokens.sol#16)\nZRX.decimals should be constant (tokens.sol#80)\nZRX.name should be constant (tokens.sol#78)\nZRX.symbol should be constant (tokens.sol#79)\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 27,
                    "vulnerability_to_line": 29,
                    "vulnerability_code": "    function totalSupply() public view returns (uint) {\n\n        return _supply;\n",
                    "message": "REP.totalSupply (tokens.sol#27-29) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 30,
                    "vulnerability_to_line": 32,
                    "vulnerability_code": "    function balanceOf(address src) public view returns (uint) {\n\n        return _balances[src];\n",
                    "message": "REP.balanceOf (tokens.sol#30-32) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 33,
                    "vulnerability_to_line": 35,
                    "vulnerability_code": "    function allowance(address src, address guy) public view returns (uint) {\n\n        return _approvals[src][guy];\n",
                    "message": "REP.allowance (tokens.sol#33-35) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 37,
                    "vulnerability_to_line": 39,
                    "vulnerability_code": "    function transfer(address dst, uint wad) public returns (bool) {\n\n        return transferFrom(msg.sender, dst, wad);\n",
                    "message": "REP.transfer (tokens.sol#37-39) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 59,
                    "vulnerability_to_line": 65,
                    "vulnerability_code": "    function approve(address guy, uint wad) public returns (bool) {\n\n        _approvals[msg.sender][guy] = wad;\n\n\n\n        emit Approval(msg.sender, guy, wad);\n\n\n\n        return true;\n",
                    "message": "REP.approve (tokens.sol#59-65) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 90,
                    "vulnerability_to_line": 92,
                    "vulnerability_code": "    function totalSupply() public view returns (uint) {\n\n        return _supply;\n",
                    "message": "ZRX.totalSupply (tokens.sol#90-92) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 93,
                    "vulnerability_to_line": 95,
                    "vulnerability_code": "    function balanceOf(address src) public view returns (uint) {\n\n        return _balances[src];\n",
                    "message": "ZRX.balanceOf (tokens.sol#93-95) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 96,
                    "vulnerability_to_line": 98,
                    "vulnerability_code": "    function allowance(address src, address guy) public view returns (uint) {\n\n        return _approvals[src][guy];\n",
                    "message": "ZRX.allowance (tokens.sol#96-98) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 100,
                    "vulnerability_to_line": 102,
                    "vulnerability_code": "    function transfer(address dst, uint wad) public returns (bool) {\n\n        return transferFrom(msg.sender, dst, wad);\n",
                    "message": "ZRX.transfer (tokens.sol#100-102) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 122,
                    "vulnerability_to_line": 128,
                    "vulnerability_code": "    function approve(address guy, uint wad) public returns (bool) {\n\n        _approvals[msg.sender][guy] = wad;\n\n\n\n        emit Approval(msg.sender, guy, wad);\n\n\n\n        return true;\n",
                    "message": "ZRX.approve (tokens.sol#122-128) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 153,
                    "vulnerability_to_line": 155,
                    "vulnerability_code": "    function totalSupply() public view returns (uint) {\n\n        return _supply;\n",
                    "message": "OMG.totalSupply (tokens.sol#153-155) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 156,
                    "vulnerability_to_line": 158,
                    "vulnerability_code": "    function balanceOf(address src) public view returns (uint) {\n\n        return _balances[src];\n",
                    "message": "OMG.balanceOf (tokens.sol#156-158) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 159,
                    "vulnerability_to_line": 161,
                    "vulnerability_code": "    function allowance(address src, address guy) public view returns (uint) {\n\n        return _approvals[src][guy];\n",
                    "message": "OMG.allowance (tokens.sol#159-161) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 163,
                    "vulnerability_to_line": 165,
                    "vulnerability_code": "    function transfer(address dst, uint wad) public {\n\n        transferFrom(msg.sender, dst, wad);\n",
                    "message": "OMG.transfer (tokens.sol#163-165) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 181,
                    "vulnerability_to_line": 185,
                    "vulnerability_code": "    function approve(address guy, uint wad) public {\n\n        _approvals[msg.sender][guy] = wad;\n\n\n\n        emit Approval(msg.sender, guy, wad);\n",
                    "message": "OMG.approve (tokens.sol#181-185) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 210,
                    "vulnerability_to_line": 212,
                    "vulnerability_code": "    function totalSupply() public view returns (uint) {\n\n        return _supply;\n",
                    "message": "BAT.totalSupply (tokens.sol#210-212) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 213,
                    "vulnerability_to_line": 215,
                    "vulnerability_code": "    function balanceOf(address src) public view returns (uint) {\n\n        return _balances[src];\n",
                    "message": "BAT.balanceOf (tokens.sol#213-215) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 216,
                    "vulnerability_to_line": 218,
                    "vulnerability_code": "    function allowance(address src, address guy) public view returns (uint) {\n\n        return _approvals[src][guy];\n",
                    "message": "BAT.allowance (tokens.sol#216-218) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 220,
                    "vulnerability_to_line": 222,
                    "vulnerability_code": "    function transfer(address dst, uint wad) public returns (bool) {\n\n        return transferFrom(msg.sender, dst, wad);\n",
                    "message": "BAT.transfer (tokens.sol#220-222) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 242,
                    "vulnerability_to_line": 248,
                    "vulnerability_code": "    function approve(address guy, uint wad) public returns (bool) {\n\n        _approvals[msg.sender][guy] = wad;\n\n\n\n        emit Approval(msg.sender, guy, wad);\n\n\n\n        return true;\n",
                    "message": "BAT.approve (tokens.sol#242-248) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 272,
                    "vulnerability_to_line": 274,
                    "vulnerability_code": "    function totalSupply() public view returns (uint) {\n\n        return _supply;\n",
                    "message": "DGD.totalSupply (tokens.sol#272-274) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 275,
                    "vulnerability_to_line": 277,
                    "vulnerability_code": "    function balanceOf(address src) public view returns (uint) {\n\n        return _balances[src];\n",
                    "message": "DGD.balanceOf (tokens.sol#275-277) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 278,
                    "vulnerability_to_line": 280,
                    "vulnerability_code": "    function allowance(address src, address guy) public view returns (uint) {\n\n        return _approvals[src][guy];\n",
                    "message": "DGD.allowance (tokens.sol#278-280) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 282,
                    "vulnerability_to_line": 284,
                    "vulnerability_code": "    function transfer(address dst, uint wad) public returns (bool) {\n\n        return transferFrom(msg.sender, dst, wad);\n",
                    "message": "DGD.transfer (tokens.sol#282-284) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 304,
                    "vulnerability_to_line": 310,
                    "vulnerability_code": "    function approve(address guy, uint wad) public returns (bool) {\n\n        _approvals[msg.sender][guy] = wad;\n\n\n\n        emit Approval(msg.sender, guy, wad);\n\n\n\n        return true;\n",
                    "message": "DGD.approve (tokens.sol#304-310) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 333,
                    "vulnerability_to_line": 335,
                    "vulnerability_code": "    function totalSupply() public view returns (uint) {\n\n        return _supply;\n",
                    "message": "GNT.totalSupply (tokens.sol#333-335) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 336,
                    "vulnerability_to_line": 338,
                    "vulnerability_code": "    function balanceOf(address src) public view returns (uint) {\n\n        return _balances[src];\n",
                    "message": "GNT.balanceOf (tokens.sol#336-338) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 340,
                    "vulnerability_to_line": 348,
                    "vulnerability_code": "    function transfer(address dst, uint wad) public returns (bool) {\n\n        require(_balances[msg.sender] >= wad, \"ds-token-insufficient-balance\");\n\n        _balances[msg.sender] = sub(_balances[msg.sender], wad);\n\n        _balances[dst] = add(_balances[dst], wad);\n\n\n\n        emit Transfer(msg.sender, dst, wad);\n\n\n\n        return true;\n",
                    "message": "GNT.transfer (tokens.sol#340-348) should be declared external\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity >=0.5.0;\n",
                    "message": "Detected issues with version pragma in tokens.sol:\n\t- pragma solidity>=0.5.0 (tokens.sol#3): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 18,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": "Variable 'REP._supply' (tokens.sol#18) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": "Variable 'REP._balances' (tokens.sol#19) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": "Variable 'REP._approvals' (tokens.sol#20) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 81,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": "Variable 'ZRX._supply' (tokens.sol#81) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 82,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": "Variable 'ZRX._balances' (tokens.sol#82) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 83,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": "Variable 'ZRX._approvals' (tokens.sol#83) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 144,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": "Variable 'OMG._supply' (tokens.sol#144) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 145,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": "Variable 'OMG._balances' (tokens.sol#145) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 146,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": "Variable 'OMG._approvals' (tokens.sol#146) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 201,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": "Variable 'BAT._supply' (tokens.sol#201) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 202,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": "Variable 'BAT._balances' (tokens.sol#202) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 203,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": "Variable 'BAT._approvals' (tokens.sol#203) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 263,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": "Variable 'DGD._supply' (tokens.sol#263) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 264,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": "Variable 'DGD._balances' (tokens.sol#264) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 265,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": "Variable 'DGD._approvals' (tokens.sol#265) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 325,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": "Variable 'GNT._supply' (tokens.sol#325) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 326,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": "Variable 'GNT._balances' (tokens.sol#326) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity >=0.5.0;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 18,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 81,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 82,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 83,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 144,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 145,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 146,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 201,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 202,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 203,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 263,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 264,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 265,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => mapping (address => uint256))  _approvals;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 325,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256                                            _supply;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 326,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    mapping (address => uint256)                       _balances;\n",
                    "message": null
                }
            ]
        }
    },
    "dss-deploy-4cf50f20e481a0f9026354dd45bd16bcb15e4501/src/govActions.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_50"
            ],
            "vulnerability_findings": [
                {
                    "name": "external-function",
                    "vulnerability_from_line": 6,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(address) public;\n",
                    "message": "Setter.file (govActions.sol#6) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 7,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(uint) public;\n",
                    "message": "Setter.file (govActions.sol#7) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 8,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, address) public;\n",
                    "message": "Setter.file (govActions.sol#8) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 9,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, uint) public;\n",
                    "message": "Setter.file (govActions.sol#9) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 10,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32) public;\n",
                    "message": "Setter.file (govActions.sol#10) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 11,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32, uint) public;\n",
                    "message": "Setter.file (govActions.sol#11) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 12,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32, address) public;\n",
                    "message": "Setter.file (govActions.sol#12) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 13,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function rely(address) public;\n",
                    "message": "Setter.rely (govActions.sol#13) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 14,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function deny(address) public;\n",
                    "message": "Setter.deny (govActions.sol#14) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 15,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function init(bytes32) public;\n",
                    "message": "Setter.init (govActions.sol#15) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function cage() public;\n",
                    "message": "EndLike.cage (govActions.sol#19) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function cage(bytes32) public;\n",
                    "message": "EndLike.cage (govActions.sol#20) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 24,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setAuthority(address) public;\n",
                    "message": "PauseLike.setAuthority (govActions.sol#24) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 25,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setDelay(uint) public;\n",
                    "message": "PauseLike.setDelay (govActions.sol#25) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 29,
                    "vulnerability_to_line": 31,
                    "vulnerability_code": "    function file(address who, address data) public {\n\n        Setter(who).file(data);\n",
                    "message": "GovActions.file (govActions.sol#29-31) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 33,
                    "vulnerability_to_line": 35,
                    "vulnerability_code": "    function file(address who, uint data) public {\n\n        Setter(who).file(data);\n",
                    "message": "GovActions.file (govActions.sol#33-35) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 37,
                    "vulnerability_to_line": 39,
                    "vulnerability_code": "    function file(address who, bytes32 what, address data) public {\n\n        Setter(who).file(what, data);\n",
                    "message": "GovActions.file (govActions.sol#37-39) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 41,
                    "vulnerability_to_line": 43,
                    "vulnerability_code": "    function file(address who, bytes32 what, uint data) public {\n\n        Setter(who).file(what, data);\n",
                    "message": "GovActions.file (govActions.sol#41-43) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 45,
                    "vulnerability_to_line": 47,
                    "vulnerability_code": "    function file(address who, bytes32 what, bytes32 data) public {\n\n        Setter(who).file(what, data);\n",
                    "message": "GovActions.file (govActions.sol#45-47) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 49,
                    "vulnerability_to_line": 51,
                    "vulnerability_code": "    function file(address who, bytes32 ilk, bytes32 what, uint data) public {\n\n        Setter(who).file(ilk, what, data);\n",
                    "message": "GovActions.file (govActions.sol#49-51) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 53,
                    "vulnerability_to_line": 55,
                    "vulnerability_code": "    function file(address who, bytes32 ilk, bytes32 what, address data) public {\n\n        Setter(who).file(ilk, what, data);\n",
                    "message": "GovActions.file (govActions.sol#53-55) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 57,
                    "vulnerability_to_line": 59,
                    "vulnerability_code": "    function rely(address who, address to) public {\n\n        Setter(who).rely(to);\n",
                    "message": "GovActions.rely (govActions.sol#57-59) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 61,
                    "vulnerability_to_line": 63,
                    "vulnerability_code": "    function deny(address who, address to) public {\n\n        Setter(who).deny(to);\n",
                    "message": "GovActions.deny (govActions.sol#61-63) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 65,
                    "vulnerability_to_line": 67,
                    "vulnerability_code": "    function init(address who, bytes32 ilk) public {\n\n        Setter(who).init(ilk);\n",
                    "message": "GovActions.init (govActions.sol#65-67) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 69,
                    "vulnerability_to_line": 71,
                    "vulnerability_code": "    function cage(address end) public {\n\n        EndLike(end).cage();\n",
                    "message": "GovActions.cage (govActions.sol#69-71) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 73,
                    "vulnerability_to_line": 75,
                    "vulnerability_code": "    function cage(address end, bytes32 ilk) public {\n\n        EndLike(end).cage(ilk);\n",
                    "message": "GovActions.cage (govActions.sol#73-75) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 77,
                    "vulnerability_to_line": 79,
                    "vulnerability_code": "    function setAuthority(address pause, address newAuthority) public {\n\n        PauseLike(pause).setAuthority(newAuthority);\n",
                    "message": "GovActions.setAuthority (govActions.sol#77-79) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 81,
                    "vulnerability_to_line": 83,
                    "vulnerability_code": "    function setDelay(address pause, uint newDelay) public {\n\n        PauseLike(pause).setDelay(newDelay);\n",
                    "message": "GovActions.setDelay (govActions.sol#81-83) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 85,
                    "vulnerability_to_line": 88,
                    "vulnerability_code": "    function setAuthorityAndDelay(address pause, address newAuthority, uint newDelay) public {\n\n        PauseLike(pause).setAuthority(newAuthority);\n\n        PauseLike(pause).setDelay(newDelay);\n",
                    "message": "GovActions.setAuthorityAndDelay (govActions.sol#85-88) should be declared external\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity >=0.5.0;\n",
                    "message": "Detected issues with version pragma in govActions.sol:\n\t- pragma solidity>=0.5.0 (govActions.sol#3): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 6,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(address) public;\n",
                    "message": "Parameter '' of Setter.file (govActions.sol#6) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 7,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(uint) public;\n",
                    "message": "Parameter '' of Setter.file (govActions.sol#7) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 8,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, address) public;\n",
                    "message": "Parameter '' of Setter.file (govActions.sol#8) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 8,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, address) public;\n",
                    "message": "Parameter '_scope_0' of Setter.file (govActions.sol#8) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 9,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, uint) public;\n",
                    "message": "Parameter '' of Setter.file (govActions.sol#9) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 9,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, uint) public;\n",
                    "message": "Parameter '_scope_0' of Setter.file (govActions.sol#9) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 10,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32) public;\n",
                    "message": "Parameter '' of Setter.file (govActions.sol#10) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 10,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32) public;\n",
                    "message": "Parameter '_scope_0' of Setter.file (govActions.sol#10) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 11,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32, uint) public;\n",
                    "message": "Parameter '' of Setter.file (govActions.sol#11) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 11,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32, uint) public;\n",
                    "message": "Parameter '_scope_0' of Setter.file (govActions.sol#11) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 11,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32, uint) public;\n",
                    "message": "Parameter '_scope_1' of Setter.file (govActions.sol#11) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 12,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32, address) public;\n",
                    "message": "Parameter '' of Setter.file (govActions.sol#12) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 12,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32, address) public;\n",
                    "message": "Parameter '_scope_0' of Setter.file (govActions.sol#12) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 12,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function file(bytes32, bytes32, address) public;\n",
                    "message": "Parameter '_scope_1' of Setter.file (govActions.sol#12) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 13,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function rely(address) public;\n",
                    "message": "Parameter '' of Setter.rely (govActions.sol#13) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 14,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function deny(address) public;\n",
                    "message": "Parameter '' of Setter.deny (govActions.sol#14) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 15,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function init(bytes32) public;\n",
                    "message": "Parameter '' of Setter.init (govActions.sol#15) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function cage(bytes32) public;\n",
                    "message": "Parameter '' of EndLike.cage (govActions.sol#20) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 24,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setAuthority(address) public;\n",
                    "message": "Parameter '' of PauseLike.setAuthority (govActions.sol#24) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 25,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setDelay(uint) public;\n",
                    "message": "Parameter '' of PauseLike.setDelay (govActions.sol#25) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity >=0.5.0;\n",
                    "message": null
                }
            ]
        }
    }
}