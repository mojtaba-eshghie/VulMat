{
    "land-auction-master/full/LANDAuction.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "use-ownable2step",
                    "vulnerability_from_line": 558,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "contract LANDAuction is Ownable, LANDAuctionStorage {\n",
                    "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it."
                },
                {
                    "name": "array-length-outside-loop",
                    "vulnerability_from_line": 727,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < _xs.length; i++) {\n",
                    "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop."
                },
                {
                    "name": "array-length-outside-loop",
                    "vulnerability_from_line": 924,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < curves.length; i++) {\n",
                    "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop."
                },
                {
                    "name": "init-variables-with-default-value",
                    "vulnerability_from_line": 454,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256 public totalBids = 0;\n",
                    "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas."
                },
                {
                    "name": "init-variables-with-default-value",
                    "vulnerability_from_line": 462,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256 public totalManaBurned = 0;\n",
                    "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas."
                },
                {
                    "name": "init-variables-with-default-value",
                    "vulnerability_from_line": 463,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256 public totalLandsBidded = 0;\n",
                    "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 576,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor(\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 577,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256[] _xPoints, \n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 578,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256[] _yPoints, \n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 579,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _startTime,\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 580,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _landsLimitPerBid,\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 581,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _gasPriceLimit,\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 582,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        ERC20 _manaToken,\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 583,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        LANDRegistry _landRegistry,\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 584,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _dex\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 585,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    ) public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "unnecessary-checked-arithmetic-in-loop",
                    "vulnerability_from_line": 727,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < _xs.length; i++) {\n",
                    "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks."
                },
                {
                    "name": "unnecessary-checked-arithmetic-in-loop",
                    "vulnerability_from_line": 924,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < curves.length; i++) {\n",
                    "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks."
                },
                {
                    "name": "unnecessary-checked-arithmetic-in-loop",
                    "vulnerability_from_line": 1118,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < pointsLength - 1; i++) {\n",
                    "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 35,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 291,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(prevBalance >= _value, \"Insufficient funds\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 301,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(prevBalance - _value == _token.balanceOf(address(this)), \"Transfer failed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 322,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(prevBalance >= _value, \"Insufficient funds\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 323,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_token.allowance(_from, address(this)) >= _value, \"Insufficient allowance\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 333,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(prevBalance - _value == _token.balanceOf(_from), \"Transfer failed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 359,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_token.allowance(address(this), _spender) == _value, \"Approve failed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 586,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 587,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            PERCENTAGE_OF_TOKEN_BALANCE == 5, \n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 588,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Balance of tokens required should be equal to 5%\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 589,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 594,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_startTime > block.timestamp, \"Started time should be after now\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 598,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 599,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            address(_landRegistry).isContract(),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 600,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The LANDRegistry token address must be a deployed contract\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 601,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 618,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(duration > 1 days, \"The duration should be greater than 1 day\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 666,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 667,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                address(dex).isContract(), \n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 668,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"Paying with other tokens has been disabled\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 669,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 675,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 676,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                _fromToken.safeTransferFrom(msg.sender, address(this), bidPriceInMana),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 677,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"Insuficient balance or unauthorized amount (transferFrom failed)\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 678,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 715,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(startTime <= block.timestamp, \"The auction has not started\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 716,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 717,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            status == Status.created && \n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 718,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            block.timestamp.sub(startTime) <= duration, \n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 719,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The auction has finished\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 720,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 721,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(tx.gasprice <= gasPriceLimit, \"Gas price limit exceeded\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 722,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_beneficiary != address(0), \"The beneficiary could not be the 0 address\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 723,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_xs.length > 0, \"You should bid for at least one LAND\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 724,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_xs.length <= landsLimitPerBid, \"LAND limit exceeded\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 725,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_xs.length == _ys.length, \"X values length should be equal to Y values length\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 726,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(tokensAllowed[address(_fromToken)].isAllowed, \"Token not allowed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 728,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 729,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                -150 <= _xs[i] && _xs[i] <= 150 && -150 <= _ys[i] && _ys[i] <= 150,\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 730,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"The coordinates should be inside bounds -150 & 150\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 731,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 805,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 806,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _fromToken.safeTransferFrom(msg.sender, address(this), tokensToConvertPlusSafetyMargin),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 807,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Transfering the totalPrice in token to LANDAuction contract failed\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 808,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 814,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_fromToken.safeApprove(address(dex), finalTokensToConvert), \"Error approve\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 827,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 828,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                _fromToken.safeTransfer(msg.sender, change),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 829,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"Transfering the change to sender failed\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 830,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 834,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_fromToken.clearApprove(address(dex)), \"Error clear approval\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 930,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        revert(\"Invalid time\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 942,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(balance > 0, \"Balance to burn should be > 0\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 950,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(balance == 0, \"Burn token failed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 963,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(balance > 0, \"Balance to burn should be > 0\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 975,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(balance == 0, \"Transfer token failed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 983,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_fee < 200 && _fee >= 100, \"Conversion fee should be >= 100 and < 200\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 992,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(status != Status.finished, \"The auction is finished\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1007,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_landsLimitPerBid > 0, \"The LAND limit should be greater than 0\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1017,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_gasPriceLimit > 0, \"The gas price should be greater than 0\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1027,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_dex != address(dex), \"The dex is the current\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1029,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(_dex.isContract(), \"The dex address must be a deployed contract\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1054,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1055,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _address.isContract(),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1056,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Tokens allowed should be a deployed ERC20 contract\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1057,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1058,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1059,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _decimals > 0 && _decimals <= MAX_DECIMALS,\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1060,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Decimals should be greather than 0 and less or equal to 18\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1061,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1062,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1063,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            !(_shouldBurnTokens && _shouldForwardTokens),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1064,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The token should be either burned or transferred\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1065,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1066,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1067,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            !_shouldForwardTokens || \n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1068,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            (_shouldForwardTokens && _forwardTarget != address(0)),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1069,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The token should be transferred to a deployed contract\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1070,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1071,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1072,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _forwardTarget != address(this) && _forwardTarget != _address, \n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1073,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The forward target should be different from  this contract and the erc20 token\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1074,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1076,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(!tokensAllowed[_address].isAllowed, \"The ERC20 token is already allowed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1101,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1102,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            tokensAllowed[_address].isAllowed,\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1103,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The ERC20 token is already disabled\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1104,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1117,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(pointsLength == _yPoints.length, \"Points should have the same length\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1123,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(x1 < x2, \"X points should increase\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 1124,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(y1 > y2, \"Y points should decrease\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 716,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 717,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            status == Status.created && \n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 718,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            block.timestamp.sub(startTime) <= duration, \n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 719,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The auction has finished\"\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 720,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 728,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 729,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                -150 <= _xs[i] && _xs[i] <= 150 && -150 <= _ys[i] && _ys[i] <= 150,\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 730,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"The coordinates should be inside bounds -150 & 150\"\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 731,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 983,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_fee < 200 && _fee >= 100, \"Conversion fee should be >= 100 and < 200\");\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1058,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1059,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _decimals > 0 && _decimals <= MAX_DECIMALS,\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1060,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Decimals should be greather than 0 and less or equal to 18\"\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1061,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1062,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1063,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            !(_shouldBurnTokens && _shouldForwardTokens),\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1064,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The token should be either burned or transferred\"\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1065,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1066,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1067,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            !_shouldForwardTokens || \n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1068,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            (_shouldForwardTokens && _forwardTarget != address(0)),\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1069,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The token should be transferred to a deployed contract\"\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1070,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1071,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1072,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _forwardTarget != address(this) && _forwardTarget != _address, \n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1073,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The forward target should be different from  this contract and the erc20 token\"\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-multiple-require",
                    "vulnerability_from_line": 1074,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-prefix-increment-not-postfix",
                    "vulnerability_from_line": 727,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < _xs.length; i++) {\n",
                    "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas."
                },
                {
                    "name": "use-prefix-increment-not-postfix",
                    "vulnerability_from_line": 924,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < curves.length; i++) {\n",
                    "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas."
                },
                {
                    "name": "use-prefix-increment-not-postfix",
                    "vulnerability_from_line": 1118,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < pointsLength - 1; i++) {\n",
                    "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 35,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 586,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 587,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            PERCENTAGE_OF_TOKEN_BALANCE == 5, \n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 588,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Balance of tokens required should be equal to 5%\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 589,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 598,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 599,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            address(_landRegistry).isContract(),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 600,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The LANDRegistry token address must be a deployed contract\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 601,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 618,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(duration > 1 days, \"The duration should be greater than 1 day\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 666,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 667,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                address(dex).isContract(), \n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 668,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"Paying with other tokens has been disabled\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 669,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 675,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 676,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                _fromToken.safeTransferFrom(msg.sender, address(this), bidPriceInMana),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 677,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"Insuficient balance or unauthorized amount (transferFrom failed)\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 678,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 722,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_beneficiary != address(0), \"The beneficiary could not be the 0 address\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 723,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_xs.length > 0, \"You should bid for at least one LAND\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 725,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_xs.length == _ys.length, \"X values length should be equal to Y values length\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 728,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 729,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                -150 <= _xs[i] && _xs[i] <= 150 && -150 <= _ys[i] && _ys[i] <= 150,\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 730,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"The coordinates should be inside bounds -150 & 150\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 731,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 805,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 806,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _fromToken.safeTransferFrom(msg.sender, address(this), tokensToConvertPlusSafetyMargin),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 807,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Transfering the totalPrice in token to LANDAuction contract failed\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 808,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 827,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 828,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                _fromToken.safeTransfer(msg.sender, change),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 829,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"Transfering the change to sender failed\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 830,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 983,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_fee < 200 && _fee >= 100, \"Conversion fee should be >= 100 and < 200\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1007,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_landsLimitPerBid > 0, \"The LAND limit should be greater than 0\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1017,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_gasPriceLimit > 0, \"The gas price should be greater than 0\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1029,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(_dex.isContract(), \"The dex address must be a deployed contract\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1054,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1055,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _address.isContract(),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1056,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Tokens allowed should be a deployed ERC20 contract\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1057,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1058,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1059,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _decimals > 0 && _decimals <= MAX_DECIMALS,\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1060,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Decimals should be greather than 0 and less or equal to 18\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1061,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1062,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1063,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            !(_shouldBurnTokens && _shouldForwardTokens),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1064,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The token should be either burned or transferred\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1065,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1066,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1067,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            !_shouldForwardTokens || \n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1068,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            (_shouldForwardTokens && _forwardTarget != address(0)),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1069,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The token should be transferred to a deployed contract\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1070,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1071,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1072,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _forwardTarget != address(this) && _forwardTarget != _address, \n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1073,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The forward target should be different from  this contract and the erc20 token\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1074,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1076,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(!tokensAllowed[_address].isAllowed, \"The ERC20 token is already allowed\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1101,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1102,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            tokensAllowed[_address].isAllowed,\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1103,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"The ERC20 token is already disabled\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1104,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 1117,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(pointsLength == _yPoints.length, \"Points should have the same length\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_108"
            ],
            "vulnerability_findings": [
                {
                    "name": "shadowing-state",
                    "vulnerability_from_line": 139,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  uint256[50] private ______gap;\n",
                    "message": "Ownable.______gap (LANDAuction.sol#139) shadows:\n\t- Initializable.______gap (LANDAuction.sol#59)\n"
                },
                {
                    "name": "constant-function",
                    "vulnerability_from_line": 47,
                    "vulnerability_to_line": 56,
                    "vulnerability_code": "  function isConstructor() private view returns (bool) {\n\n    // extcodesize checks the size of the code stored in an address, and\n\n    // address returns the current address. Since the code is still not\n\n    // deployed when running a constructor, any checks on its code size will\n\n    // yield zero, making it an effective way to detect if a contract is\n\n    // under construction or not.\n\n    uint256 cs;\n\n    assembly { cs := extcodesize(address) }\n\n    return cs == 0;\n",
                    "message": "Initializable.isConstructor (LANDAuction.sol#47-56) is declared view but contains assembly code\n"
                },
                {
                    "name": "constant-function",
                    "vulnerability_from_line": 222,
                    "vulnerability_to_line": 233,
                    "vulnerability_code": "  function isContract(address account) internal view returns (bool) {\n\n    uint256 size;\n\n    // XXX Currently there is no better way to check if there is a contract in an address\n\n    // than to check the size of the code at that address.\n\n    // See https://ethereum.stackexchange.com/a/14016/36603\n\n    // for more details about how this works.\n\n    // TODO Check this again before the Serenity release, because all addresses will be\n\n    // contracts then.\n\n    // solium-disable-next-line security/no-inline-assembly\n\n    assembly { size := extcodesize(account) }\n\n    return size > 0;\n",
                    "message": "Address.isContract (LANDAuction.sol#222-233) is declared view but contains assembly code\n"
                },
                {
                    "name": "incorrect-equality",
                    "vulnerability_from_line": 288,
                    "vulnerability_to_line": 304,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n\n        uint256 prevBalance = _token.balanceOf(address(this));\n\n\n\n        require(prevBalance >= _value, \"Insufficient funds\");\n\n\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _value)\n\n        );\n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(prevBalance - _value == _token.balanceOf(address(this)), \"Transfer failed\");\n\n\n\n        return true;\n",
                    "message": "SafeERC20.safeTransfer (LANDAuction.sol#288-304) uses a dangerous strict equality:\n\t- require(bool,string)(prevBalance - _value == _token.balanceOf(address(this)),Transfer failed)\n"
                },
                {
                    "name": "incorrect-equality",
                    "vulnerability_from_line": 288,
                    "vulnerability_to_line": 304,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n\n        uint256 prevBalance = _token.balanceOf(address(this));\n\n\n\n        require(prevBalance >= _value, \"Insufficient funds\");\n\n\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _value)\n\n        );\n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(prevBalance - _value == _token.balanceOf(address(this)), \"Transfer failed\");\n\n\n\n        return true;\n",
                    "message": "SafeERC20.safeTransfer (LANDAuction.sol#288-304) uses a dangerous strict equality:\n\t- require(bool,string)(prevBalance - _value == _token.balanceOf(address(this)),Transfer failed)\nSafeERC20.safeTransferFrom (LANDAuction.sol#313-336) uses a dangerous strict equality:\n\t- require(bool,string)(prevBalance - _value == _token.balanceOf(_from),Transfer failed)\n"
                },
                {
                    "name": "incorrect-equality",
                    "vulnerability_from_line": 938,
                    "vulnerability_to_line": 951,
                    "vulnerability_code": "    function _burnTokens(uint256 _bidId, ERC20 _token) private {\n\n        uint256 balance = _token.balanceOf(address(this));\n\n\n\n        // Check if balance is valid\n\n        require(balance > 0, \"Balance to burn should be > 0\");\n\n        \n\n        _token.burn(balance);\n\n\n\n        emit TokenBurned(_bidId, address(_token), balance);\n\n\n\n        // Check if balance of the auction contract is empty\n\n        balance = _token.balanceOf(address(this));\n\n        require(balance == 0, \"Burn token failed\");\n",
                    "message": "LANDAuction._burnTokens (LANDAuction.sol#938-951) uses a dangerous strict equality:\n\t- require(bool,string)(balance == 0,Burn token failed)\n"
                },
                {
                    "name": "incorrect-equality",
                    "vulnerability_from_line": 938,
                    "vulnerability_to_line": 951,
                    "vulnerability_code": "    function _burnTokens(uint256 _bidId, ERC20 _token) private {\n\n        uint256 balance = _token.balanceOf(address(this));\n\n\n\n        // Check if balance is valid\n\n        require(balance > 0, \"Balance to burn should be > 0\");\n\n        \n\n        _token.burn(balance);\n\n\n\n        emit TokenBurned(_bidId, address(_token), balance);\n\n\n\n        // Check if balance of the auction contract is empty\n\n        balance = _token.balanceOf(address(this));\n\n        require(balance == 0, \"Burn token failed\");\n",
                    "message": "LANDAuction._burnTokens (LANDAuction.sol#938-951) uses a dangerous strict equality:\n\t- require(bool,string)(balance == 0,Burn token failed)\nLANDAuction._forwardTokens (LANDAuction.sol#959-976) uses a dangerous strict equality:\n\t- require(bool,string)(balance == 0,Transfer token failed)\n"
                },
                {
                    "name": "reentrancy-no-eth",
                    "vulnerability_from_line": 646,
                    "vulnerability_to_line": 699,
                    "vulnerability_code": "    function bid(\n\n        int[] _xs, \n\n        int[] _ys, \n\n        address _beneficiary, \n\n        ERC20 _fromToken\n\n    )\n\n        external \n\n    {\n\n        _validateBidParameters(\n\n            _xs, \n\n            _ys, \n\n            _beneficiary, \n\n            _fromToken\n\n        );\n\n        \n\n        uint256 bidId = _getBidId();\n\n        uint256 bidPriceInMana = _xs.length.mul(getCurrentPrice());\n\n        uint256 manaAmountToBurn = bidPriceInMana;\n\n\n\n        if (address(_fromToken) != address(manaToken)) {\n\n            require(\n\n                address(dex).isContract(), \n\n                \"Paying with other tokens has been disabled\"\n\n            );\n\n            // Convert from the other token to MANA. The amount to be burned might be smaller\n\n            // because 5% will be burned or forwarded without converting it to MANA.\n\n            manaAmountToBurn = _convertSafe(bidId, _fromToken, bidPriceInMana);\n\n        } else {\n\n            // Transfer MANA to this contract\n\n            require(\n\n                _fromToken.safeTransferFrom(msg.sender, address(this), bidPriceInMana),\n\n                \"Insuficient balance or unauthorized amount (transferFrom failed)\"\n\n            );\n\n        }\n\n\n\n        // Process funds (burn or forward them)\n\n        _processFunds(bidId, _fromToken);\n\n\n\n        // Assign LANDs to the beneficiary user\n\n        landRegistry.assignMultipleParcels(_xs, _ys, _beneficiary);\n\n\n\n        emit BidSuccessful(\n\n            bidId,\n\n            _beneficiary,\n\n            _fromToken,\n\n            getCurrentPrice(),\n\n            manaAmountToBurn,\n\n            _xs,\n\n            _ys\n\n        );  \n\n\n\n        // Update stats\n\n        _updateStats(_xs.length, manaAmountToBurn);        \n",
                    "message": "Reentrancy in LANDAuction.bid (LANDAuction.sol#646-699):\n\tExternal calls:\n\t- manaAmountToBurn = _convertSafe(bidId,_fromToken,bidPriceInMana) (LANDAuction.sol#672)\n\t- _processFunds(bidId,_fromToken) (LANDAuction.sol#682)\n\t- landRegistry.assignMultipleParcels(_xs,_ys,_beneficiary) (LANDAuction.sol#685)\n\tState variables written after the call(s):\n\t- totalBids (LANDAuction.sol#698)\n"
                },
                {
                    "name": "unused-return",
                    "vulnerability_from_line": 959,
                    "vulnerability_to_line": 976,
                    "vulnerability_code": "    function _forwardTokens(uint256 _bidId, address _address, ERC20 _token) private {\n\n        uint256 balance = _token.balanceOf(address(this));\n\n\n\n        // Check if balance is valid\n\n        require(balance > 0, \"Balance to burn should be > 0\");\n\n        \n\n        _token.safeTransfer(_address, balance);\n\n\n\n        emit TokenTransferred(\n\n            _bidId, \n\n            address(_token), \n\n            _address,balance\n\n        );\n\n\n\n        // Check if balance of the auction contract is empty\n\n        balance = _token.balanceOf(address(this));\n\n        require(balance == 0, \"Transfer token failed\");\n",
                    "message": "LANDAuction._forwardTokens (LANDAuction.sol#959-976) does not use the value returned by external calls:\n\t-_token.safeTransfer(_address,balance) (LANDAuction.sol#965)\n"
                },
                {
                    "name": "reentrancy-benign",
                    "vulnerability_from_line": 646,
                    "vulnerability_to_line": 699,
                    "vulnerability_code": "    function bid(\n\n        int[] _xs, \n\n        int[] _ys, \n\n        address _beneficiary, \n\n        ERC20 _fromToken\n\n    )\n\n        external \n\n    {\n\n        _validateBidParameters(\n\n            _xs, \n\n            _ys, \n\n            _beneficiary, \n\n            _fromToken\n\n        );\n\n        \n\n        uint256 bidId = _getBidId();\n\n        uint256 bidPriceInMana = _xs.length.mul(getCurrentPrice());\n\n        uint256 manaAmountToBurn = bidPriceInMana;\n\n\n\n        if (address(_fromToken) != address(manaToken)) {\n\n            require(\n\n                address(dex).isContract(), \n\n                \"Paying with other tokens has been disabled\"\n\n            );\n\n            // Convert from the other token to MANA. The amount to be burned might be smaller\n\n            // because 5% will be burned or forwarded without converting it to MANA.\n\n            manaAmountToBurn = _convertSafe(bidId, _fromToken, bidPriceInMana);\n\n        } else {\n\n            // Transfer MANA to this contract\n\n            require(\n\n                _fromToken.safeTransferFrom(msg.sender, address(this), bidPriceInMana),\n\n                \"Insuficient balance or unauthorized amount (transferFrom failed)\"\n\n            );\n\n        }\n\n\n\n        // Process funds (burn or forward them)\n\n        _processFunds(bidId, _fromToken);\n\n\n\n        // Assign LANDs to the beneficiary user\n\n        landRegistry.assignMultipleParcels(_xs, _ys, _beneficiary);\n\n\n\n        emit BidSuccessful(\n\n            bidId,\n\n            _beneficiary,\n\n            _fromToken,\n\n            getCurrentPrice(),\n\n            manaAmountToBurn,\n\n            _xs,\n\n            _ys\n\n        );  \n\n\n\n        // Update stats\n\n        _updateStats(_xs.length, manaAmountToBurn);        \n",
                    "message": "Reentrancy in LANDAuction.bid (LANDAuction.sol#646-699):\n\tExternal calls:\n\t- manaAmountToBurn = _convertSafe(bidId,_fromToken,bidPriceInMana) (LANDAuction.sol#672)\n\t- _processFunds(bidId,_fromToken) (LANDAuction.sol#682)\n\t- landRegistry.assignMultipleParcels(_xs,_ys,_beneficiary) (LANDAuction.sol#685)\n\tState variables written after the call(s):\n\t- totalLandsBidded (LANDAuction.sol#698)\n\t- totalManaBurned (LANDAuction.sol#698)\n"
                },
                {
                    "name": "timestamp",
                    "vulnerability_from_line": 576,
                    "vulnerability_to_line": 637,
                    "vulnerability_code": "    constructor(\n\n        uint256[] _xPoints, \n\n        uint256[] _yPoints, \n\n        uint256 _startTime,\n\n        uint256 _landsLimitPerBid,\n\n        uint256 _gasPriceLimit,\n\n        ERC20 _manaToken,\n\n        LANDRegistry _landRegistry,\n\n        address _dex\n\n    ) public {\n\n        require(\n\n            PERCENTAGE_OF_TOKEN_BALANCE == 5, \n\n            \"Balance of tokens required should be equal to 5%\"\n\n        );\n\n        // Initialize owneable\n\n        Ownable.initialize(msg.sender);\n\n\n\n        // Schedule auction\n\n        require(_startTime > block.timestamp, \"Started time should be after now\");\n\n        startTime = _startTime;\n\n\n\n        // Set LANDRegistry\n\n        require(\n\n            address(_landRegistry).isContract(),\n\n            \"The LANDRegistry token address must be a deployed contract\"\n\n        );\n\n        landRegistry = _landRegistry;\n\n\n\n        setDex(_dex);\n\n\n\n        // Set MANAToken\n\n        allowToken(\n\n            address(_manaToken), \n\n            18,\n\n            true, \n\n            false, \n\n            address(0)\n\n        );\n\n        manaToken = _manaToken;\n\n\n\n        // Set total duration of the auction\n\n        duration = _xPoints[_xPoints.length - 1];\n\n        require(duration > 1 days, \"The duration should be greater than 1 day\");\n\n\n\n        // Set Curve\n\n        _setCurve(_xPoints, _yPoints);\n\n\n\n        // Set limits\n\n        setLandsLimitPerBid(_landsLimitPerBid);\n\n        setGasPriceLimit(_gasPriceLimit);\n\n        \n\n        // Initialize status\n\n        status = Status.created;      \n\n\n\n        emit AuctionCreated(\n\n            msg.sender,\n\n            startTime,\n\n            duration,\n\n            initialPrice, \n\n            endPrice\n\n        );\n",
                    "message": "LANDAuction.constructor (LANDAuction.sol#576-637) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(_startTime > block.timestamp,Started time should be after now) (LANDAuction.sol#594)\n"
                },
                {
                    "name": "timestamp",
                    "vulnerability_from_line": 708,
                    "vulnerability_to_line": 733,
                    "vulnerability_code": "    function _validateBidParameters(\n\n        int[] _xs, \n\n        int[] _ys, \n\n        address _beneficiary, \n\n        ERC20 _fromToken\n\n    ) internal view \n\n    {\n\n        require(startTime <= block.timestamp, \"The auction has not started\");\n\n        require(\n\n            status == Status.created && \n\n            block.timestamp.sub(startTime) <= duration, \n\n            \"The auction has finished\"\n\n        );\n\n        require(tx.gasprice <= gasPriceLimit, \"Gas price limit exceeded\");\n\n        require(_beneficiary != address(0), \"The beneficiary could not be the 0 address\");\n\n        require(_xs.length > 0, \"You should bid for at least one LAND\");\n\n        require(_xs.length <= landsLimitPerBid, \"LAND limit exceeded\");\n\n        require(_xs.length == _ys.length, \"X values length should be equal to Y values length\");\n\n        require(tokensAllowed[address(_fromToken)].isAllowed, \"Token not allowed\");\n\n        for (uint256 i = 0; i < _xs.length; i++) {\n\n            require(\n\n                -150 <= _xs[i] && _xs[i] <= 150 && -150 <= _ys[i] && _ys[i] <= 150,\n\n                \"The coordinates should be inside bounds -150 & 150\"\n\n            );\n\n        }\n",
                    "message": "LANDAuction._validateBidParameters (LANDAuction.sol#708-733) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(status == Status.created && block.timestamp.sub(startTime) <= duration,The auction has finished) (LANDAuction.sol#716-720)\n\t- require(bool,string)(startTime <= block.timestamp,The auction has not started) (LANDAuction.sol#715)\n"
                },
                {
                    "name": "timestamp",
                    "vulnerability_from_line": 741,
                    "vulnerability_to_line": 754,
                    "vulnerability_code": "    function getCurrentPrice() public view returns (uint256) { \n\n        // If the auction has not started returns initialPrice\n\n        if (startTime == 0 || startTime >= block.timestamp) {\n\n            return initialPrice;\n\n        }\n\n\n\n        // If the auction has finished returns endPrice\n\n        uint256 timePassed = block.timestamp - startTime;\n\n        if (timePassed >= duration) {\n\n            return endPrice;\n\n        }\n\n\n\n        return _getPrice(timePassed);\n",
                    "message": "LANDAuction.getCurrentPrice (LANDAuction.sol#741-754) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- timePassed >= duration (LANDAuction.sol#749-751)\n\t- startTime == 0 || startTime >= block.timestamp (LANDAuction.sol#743-745)\n"
                },
                {
                    "name": "timestamp",
                    "vulnerability_from_line": 923,
                    "vulnerability_to_line": 931,
                    "vulnerability_code": "    function _getPrice(uint256 _time) internal view returns (uint256) {\n\n        for (uint256 i = 0; i < curves.length; i++) {\n\n            Func storage func = curves[i];\n\n            if (_time < func.limit) {\n\n                return func.base.sub(func.slope.mul(_time));\n\n            }\n\n        }\n\n        revert(\"Invalid time\");\n",
                    "message": "LANDAuction._getPrice (LANDAuction.sol#923-931) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- _time < func.limit (LANDAuction.sol#926-928)\n"
                },
                {
                    "name": "assembly",
                    "vulnerability_from_line": 47,
                    "vulnerability_to_line": 56,
                    "vulnerability_code": "  function isConstructor() private view returns (bool) {\n\n    // extcodesize checks the size of the code stored in an address, and\n\n    // address returns the current address. Since the code is still not\n\n    // deployed when running a constructor, any checks on its code size will\n\n    // yield zero, making it an effective way to detect if a contract is\n\n    // under construction or not.\n\n    uint256 cs;\n\n    assembly { cs := extcodesize(address) }\n\n    return cs == 0;\n",
                    "message": "Initializable.isConstructor uses assembly (LANDAuction.sol#47-56)\n\t- LANDAuction.sol#54-55\n"
                },
                {
                    "name": "assembly",
                    "vulnerability_from_line": 222,
                    "vulnerability_to_line": 233,
                    "vulnerability_code": "  function isContract(address account) internal view returns (bool) {\n\n    uint256 size;\n\n    // XXX Currently there is no better way to check if there is a contract in an address\n\n    // than to check the size of the code at that address.\n\n    // See https://ethereum.stackexchange.com/a/14016/36603\n\n    // for more details about how this works.\n\n    // TODO Check this again before the Serenity release, because all addresses will be\n\n    // contracts then.\n\n    // solium-disable-next-line security/no-inline-assembly\n\n    assembly { size := extcodesize(account) }\n\n    return size > 0;\n",
                    "message": "Address.isContract uses assembly (LANDAuction.sol#222-233)\n\t- LANDAuction.sol#231-232\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 91,
                    "vulnerability_to_line": 93,
                    "vulnerability_code": "  function owner() public view returns(address) {\n\n    return _owner;\n",
                    "message": "Ownable.owner (LANDAuction.sol#91-93) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 116,
                    "vulnerability_to_line": 119,
                    "vulnerability_code": "  function renounceOwnership() public onlyOwner {\n\n    emit OwnershipRenounced(_owner);\n\n    _owner = address(0);\n",
                    "message": "Ownable.renounceOwnership (LANDAuction.sol#116-119) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 125,
                    "vulnerability_to_line": 127,
                    "vulnerability_code": "  function transferOwnership(address newOwner) public onlyOwner {\n\n    _transferOwnership(newOwner);\n",
                    "message": "Ownable.transferOwnership (LANDAuction.sol#125-127) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 410,
                    "vulnerability_to_line": 411,
                    "vulnerability_code": "    function getExpectedRate(IERC20 _srcToken, IERC20 _destToken, uint256 _srcAmount) \n",
                    "message": "ITokenConverter.getExpectedRate (LANDAuction.sol#410-411) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 421,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function burn(uint256 _value) public;\n",
                    "message": "ERC20.burn (LANDAuction.sol#421) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 991,
                    "vulnerability_to_line": 1000,
                    "vulnerability_code": "    function finishAuction() public onlyOwner {\n\n        require(status != Status.finished, \"The auction is finished\");\n\n\n\n        uint256 currentPrice = getCurrentPrice();\n\n\n\n        status = Status.finished;\n\n        endTime = block.timestamp;\n\n\n\n        emit AuctionFinished(msg.sender, block.timestamp, currentPrice);\n",
                    "message": "LANDAuction.finishAuction (LANDAuction.sol#991-1000) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 1100,
                    "vulnerability_to_line": 1107,
                    "vulnerability_code": "    function disableToken(address _address) public onlyOwner {\n\n        require(\n\n            tokensAllowed[_address].isAllowed,\n\n            \"The ERC20 token is already disabled\"\n\n        );\n\n        delete tokensAllowed[_address];\n\n        emit TokenDisabled(msg.sender, _address);\n",
                    "message": "LANDAuction.disableToken (LANDAuction.sol#1100-1107) should be declared external\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 288,
                    "vulnerability_to_line": 304,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n\n        uint256 prevBalance = _token.balanceOf(address(this));\n\n\n\n        require(prevBalance >= _value, \"Insufficient funds\");\n\n\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _value)\n\n        );\n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(prevBalance - _value == _token.balanceOf(address(this)), \"Transfer failed\");\n\n\n\n        return true;\n",
                    "message": "Low level call in SafeERC20.safeTransfer (LANDAuction.sol#288-304):\n\t-success = address(_token).call(abi.encodeWithSignature(transfer(address,uint256),_to,_value)) LANDAuction.sol#293-295\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 313,
                    "vulnerability_to_line": 336,
                    "vulnerability_code": "    function safeTransferFrom(\n\n        IERC20 _token,\n\n        address _from,\n\n        address _to, \n\n        uint256 _value\n\n    ) internal returns (bool) \n\n    {\n\n        uint256 prevBalance = _token.balanceOf(_from);\n\n\n\n        require(prevBalance >= _value, \"Insufficient funds\");\n\n        require(_token.allowance(_from, address(this)) >= _value, \"Insufficient allowance\");\n\n\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"transferFrom(address,address,uint256)\", _from, _to, _value)\n\n        );\n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(prevBalance - _value == _token.balanceOf(_from), \"Transfer failed\");\n\n\n\n        return true;\n",
                    "message": "Low level call in SafeERC20.safeTransferFrom (LANDAuction.sol#313-336):\n\t-success = address(_token).call(abi.encodeWithSignature(transferFrom(address,address,uint256),_from,_to,_value)) LANDAuction.sol#325-327\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 350,
                    "vulnerability_to_line": 362,
                    "vulnerability_code": "    function safeApprove(IERC20 _token, address _spender, uint256 _value) internal returns (bool) {\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"approve(address,uint256)\",_spender, _value)\n\n        ); \n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(_token.allowance(address(this), _spender) == _value, \"Approve failed\");\n\n\n\n        return true;\n",
                    "message": "Low level call in SafeERC20.safeApprove (LANDAuction.sol#350-362):\n\t-success = address(_token).call(abi.encodeWithSignature(approve(address,uint256),_spender,_value)) LANDAuction.sol#351-353\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 59,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  uint256[50] private ______gap;\n",
                    "message": "Variable 'Initializable.______gap' (LANDAuction.sol#59) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 133,
                    "vulnerability_to_line": 137,
                    "vulnerability_code": "  function _transferOwnership(address newOwner) internal {\n\n    require(newOwner != address(0));\n\n    emit OwnershipTransferred(_owner, newOwner);\n\n    _owner = newOwner;\n",
                    "message": "Function 'Ownable._transferOwnership' (LANDAuction.sol#133-137) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 139,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  uint256[50] private ______gap;\n",
                    "message": "Variable 'Ownable.______gap' (LANDAuction.sol#139) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 288,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_token' of SafeERC20.safeTransfer (LANDAuction.sol#288) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 288,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_to' of SafeERC20.safeTransfer (LANDAuction.sol#288) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 288,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_value' of SafeERC20.safeTransfer (LANDAuction.sol#288) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 314,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        IERC20 _token,\n",
                    "message": "Parameter '_token' of SafeERC20.safeTransferFrom (LANDAuction.sol#314) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 315,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _from,\n",
                    "message": "Parameter '_from' of SafeERC20.safeTransferFrom (LANDAuction.sol#315) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 316,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _to, \n",
                    "message": "Parameter '_to' of SafeERC20.safeTransferFrom (LANDAuction.sol#316) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 317,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _value\n",
                    "message": "Parameter '_value' of SafeERC20.safeTransferFrom (LANDAuction.sol#317) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 350,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeApprove(IERC20 _token, address _spender, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_token' of SafeERC20.safeApprove (LANDAuction.sol#350) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 350,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeApprove(IERC20 _token, address _spender, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_spender' of SafeERC20.safeApprove (LANDAuction.sol#350) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 350,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeApprove(IERC20 _token, address _spender, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_value' of SafeERC20.safeApprove (LANDAuction.sol#350) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 370,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function clearApprove(IERC20 _token, address _spender) internal returns (bool) {\n",
                    "message": "Parameter '_token' of SafeERC20.clearApprove (LANDAuction.sol#370) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 370,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function clearApprove(IERC20 _token, address _spender) internal returns (bool) {\n",
                    "message": "Parameter '_spender' of SafeERC20.clearApprove (LANDAuction.sol#370) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 577,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256[] _xPoints, \n",
                    "message": "Parameter '_xPoints' of LANDAuction. (LANDAuction.sol#577) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 578,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256[] _yPoints, \n",
                    "message": "Parameter '_yPoints' of LANDAuction. (LANDAuction.sol#578) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 579,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _startTime,\n",
                    "message": "Parameter '_startTime' of LANDAuction. (LANDAuction.sol#579) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 580,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _landsLimitPerBid,\n",
                    "message": "Parameter '_landsLimitPerBid' of LANDAuction. (LANDAuction.sol#580) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 581,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _gasPriceLimit,\n",
                    "message": "Parameter '_gasPriceLimit' of LANDAuction. (LANDAuction.sol#581) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 582,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        ERC20 _manaToken,\n",
                    "message": "Parameter '_manaToken' of LANDAuction. (LANDAuction.sol#582) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 583,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        LANDRegistry _landRegistry,\n",
                    "message": "Parameter '_landRegistry' of LANDAuction. (LANDAuction.sol#583) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 584,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _dex\n",
                    "message": "Parameter '_dex' of LANDAuction. (LANDAuction.sol#584) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 647,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        int[] _xs, \n",
                    "message": "Parameter '_xs' of LANDAuction.bid (LANDAuction.sol#647) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 648,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        int[] _ys, \n",
                    "message": "Parameter '_ys' of LANDAuction.bid (LANDAuction.sol#648) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 649,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _beneficiary, \n",
                    "message": "Parameter '_beneficiary' of LANDAuction.bid (LANDAuction.sol#649) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 650,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        ERC20 _fromToken\n",
                    "message": "Parameter '_fromToken' of LANDAuction.bid (LANDAuction.sol#650) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 708,
                    "vulnerability_to_line": 733,
                    "vulnerability_code": "    function _validateBidParameters(\n\n        int[] _xs, \n\n        int[] _ys, \n\n        address _beneficiary, \n\n        ERC20 _fromToken\n\n    ) internal view \n\n    {\n\n        require(startTime <= block.timestamp, \"The auction has not started\");\n\n        require(\n\n            status == Status.created && \n\n            block.timestamp.sub(startTime) <= duration, \n\n            \"The auction has finished\"\n\n        );\n\n        require(tx.gasprice <= gasPriceLimit, \"Gas price limit exceeded\");\n\n        require(_beneficiary != address(0), \"The beneficiary could not be the 0 address\");\n\n        require(_xs.length > 0, \"You should bid for at least one LAND\");\n\n        require(_xs.length <= landsLimitPerBid, \"LAND limit exceeded\");\n\n        require(_xs.length == _ys.length, \"X values length should be equal to Y values length\");\n\n        require(tokensAllowed[address(_fromToken)].isAllowed, \"Token not allowed\");\n\n        for (uint256 i = 0; i < _xs.length; i++) {\n\n            require(\n\n                -150 <= _xs[i] && _xs[i] <= 150 && -150 <= _ys[i] && _ys[i] <= 150,\n\n                \"The coordinates should be inside bounds -150 & 150\"\n\n            );\n\n        }\n",
                    "message": "Function 'LANDAuction._validateBidParameters' (LANDAuction.sol#708-733) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 709,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        int[] _xs, \n",
                    "message": "Parameter '_xs' of LANDAuction._validateBidParameters (LANDAuction.sol#709) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 710,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        int[] _ys, \n",
                    "message": "Parameter '_ys' of LANDAuction._validateBidParameters (LANDAuction.sol#710) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 711,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _beneficiary, \n",
                    "message": "Parameter '_beneficiary' of LANDAuction._validateBidParameters (LANDAuction.sol#711) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 712,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        ERC20 _fromToken\n",
                    "message": "Parameter '_fromToken' of LANDAuction._validateBidParameters (LANDAuction.sol#712) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 765,
                    "vulnerability_to_line": 843,
                    "vulnerability_code": "    function _convertSafe(\n\n        uint256 _bidId,\n\n        ERC20 _fromToken,\n\n        uint256 _bidPriceInMana\n\n    ) internal returns (uint256 requiredManaAmountToBurn)\n\n    {\n\n        requiredManaAmountToBurn = _bidPriceInMana;\n\n        Token memory fromToken = tokensAllowed[address(_fromToken)];\n\n\n\n        uint256 bidPriceInManaPlusSafetyMargin = _bidPriceInMana.mul(conversionFee).div(100);\n\n\n\n        // Get rate\n\n        uint256 tokenRate = getRate(manaToken, _fromToken, bidPriceInManaPlusSafetyMargin);\n\n\n\n        // Check if contract should burn or transfer some tokens\n\n        uint256 requiredTokenBalance = 0;\n\n        \n\n        if (fromToken.shouldBurnTokens || fromToken.shouldForwardTokens) {\n\n            requiredTokenBalance = _calculateRequiredTokenBalance(requiredManaAmountToBurn, tokenRate);\n\n            requiredManaAmountToBurn = _calculateRequiredManaAmount(_bidPriceInMana);\n\n        }\n\n\n\n        // Calculate the amount of _fromToken to be converted\n\n        uint256 tokensToConvertPlusSafetyMargin = bidPriceInManaPlusSafetyMargin\n\n            .mul(tokenRate)\n\n            .div(10 ** 18);\n\n\n\n        // Normalize to _fromToken decimals\n\n        if (MAX_DECIMALS > fromToken.decimals) {\n\n            requiredTokenBalance = _normalizeDecimals(\n\n                fromToken.decimals, \n\n                requiredTokenBalance\n\n            );\n\n            tokensToConvertPlusSafetyMargin = _normalizeDecimals(\n\n                fromToken.decimals,\n\n                tokensToConvertPlusSafetyMargin\n\n            );\n\n        }\n\n\n\n        // Retrieve tokens from the sender to this contract\n\n        require(\n\n            _fromToken.safeTransferFrom(msg.sender, address(this), tokensToConvertPlusSafetyMargin),\n\n            \"Transfering the totalPrice in token to LANDAuction contract failed\"\n\n        );\n\n        \n\n        // Calculate the total tokens to convert\n\n        uint256 finalTokensToConvert = tokensToConvertPlusSafetyMargin.sub(requiredTokenBalance);\n\n\n\n        // Approve amount of _fromToken owned by contract to be used by dex contract\n\n        require(_fromToken.safeApprove(address(dex), finalTokensToConvert), \"Error approve\");\n\n\n\n        // Convert _fromToken to MANA\n\n        uint256 change = dex.convert(\n\n                _fromToken,\n\n                manaToken,\n\n                finalTokensToConvert,\n\n                requiredManaAmountToBurn\n\n        );\n\n\n\n       // Return change in _fromToken to sender\n\n        if (change > 0) {\n\n            // Return the change of src token\n\n            require(\n\n                _fromToken.safeTransfer(msg.sender, change),\n\n                \"Transfering the change to sender failed\"\n\n            );\n\n        }\n\n\n\n        // Remove approval of _fromToken owned by contract to be used by dex contract\n\n        require(_fromToken.clearApprove(address(dex)), \"Error clear approval\");\n\n\n\n        emit BidConversion(\n\n            _bidId,\n\n            address(_fromToken),\n\n            requiredManaAmountToBurn,\n\n            tokensToConvertPlusSafetyMargin.sub(change),\n\n            requiredTokenBalance\n\n        );\n",
                    "message": "Function 'LANDAuction._convertSafe' (LANDAuction.sol#765-843) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 766,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _bidId,\n",
                    "message": "Parameter '_bidId' of LANDAuction._convertSafe (LANDAuction.sol#766) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 767,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        ERC20 _fromToken,\n",
                    "message": "Parameter '_fromToken' of LANDAuction._convertSafe (LANDAuction.sol#767) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 768,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _bidPriceInMana\n",
                    "message": "Parameter '_bidPriceInMana' of LANDAuction._convertSafe (LANDAuction.sol#768) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 853,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        IERC20 _srcToken, \n",
                    "message": "Parameter '_srcToken' of LANDAuction.getRate (LANDAuction.sol#853) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 854,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        IERC20 _destToken, \n",
                    "message": "Parameter '_destToken' of LANDAuction.getRate (LANDAuction.sol#854) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 855,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _srcAmount\n",
                    "message": "Parameter '_srcAmount' of LANDAuction.getRate (LANDAuction.sol#855) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 867,
                    "vulnerability_to_line": 877,
                    "vulnerability_code": "    function _calculateRequiredTokenBalance(\n\n        uint256 _totalPrice,\n\n        uint256 _tokenRate\n\n    ) \n\n    internal pure returns (uint256) \n\n    {\n\n        return _totalPrice.mul(_tokenRate)\n\n            .div(10 ** 18)\n\n            .mul(PERCENTAGE_OF_TOKEN_BALANCE)\n\n            .div(100);\n",
                    "message": "Function 'LANDAuction._calculateRequiredTokenBalance' (LANDAuction.sol#867-877) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 868,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _totalPrice,\n",
                    "message": "Parameter '_totalPrice' of LANDAuction._calculateRequiredTokenBalance (LANDAuction.sol#868) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 869,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _tokenRate\n",
                    "message": "Parameter '_tokenRate' of LANDAuction._calculateRequiredTokenBalance (LANDAuction.sol#869) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 885,
                    "vulnerability_to_line": 891,
                    "vulnerability_code": "    function _calculateRequiredManaAmount(\n\n        uint256 _totalPrice\n\n    ) \n\n    internal pure returns (uint256)\n\n    {\n\n        return _totalPrice.mul(100 - PERCENTAGE_OF_TOKEN_BALANCE).div(100);\n",
                    "message": "Function 'LANDAuction._calculateRequiredManaAmount' (LANDAuction.sol#885-891) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 886,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _totalPrice\n",
                    "message": "Parameter '_totalPrice' of LANDAuction._calculateRequiredManaAmount (LANDAuction.sol#886) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 900,
                    "vulnerability_to_line": 914,
                    "vulnerability_code": "    function _processFunds(uint256 _bidId, ERC20 _token) internal {\n\n        // Burn MANA\n\n        _burnTokens(_bidId, manaToken);\n\n\n\n        // Burn or forward token if it is not MANA\n\n        Token memory token = tokensAllowed[address(_token)];\n\n        if (_token != manaToken) {\n\n            if (token.shouldBurnTokens) {\n\n                _burnTokens(_bidId, _token);\n\n            }\n\n            if (token.shouldForwardTokens) {\n\n                _forwardTokens(_bidId, token.forwardTarget, _token);\n\n            }   \n\n        }\n",
                    "message": "Function 'LANDAuction._processFunds' (LANDAuction.sol#900-914) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 900,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _processFunds(uint256 _bidId, ERC20 _token) internal {\n",
                    "message": "Parameter '_bidId' of LANDAuction._processFunds (LANDAuction.sol#900) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 900,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _processFunds(uint256 _bidId, ERC20 _token) internal {\n",
                    "message": "Parameter '_token' of LANDAuction._processFunds (LANDAuction.sol#900) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 923,
                    "vulnerability_to_line": 931,
                    "vulnerability_code": "    function _getPrice(uint256 _time) internal view returns (uint256) {\n\n        for (uint256 i = 0; i < curves.length; i++) {\n\n            Func storage func = curves[i];\n\n            if (_time < func.limit) {\n\n                return func.base.sub(func.slope.mul(_time));\n\n            }\n\n        }\n\n        revert(\"Invalid time\");\n",
                    "message": "Function 'LANDAuction._getPrice' (LANDAuction.sol#923-931) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 923,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _getPrice(uint256 _time) internal view returns (uint256) {\n",
                    "message": "Parameter '_time' of LANDAuction._getPrice (LANDAuction.sol#923) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 938,
                    "vulnerability_to_line": 951,
                    "vulnerability_code": "    function _burnTokens(uint256 _bidId, ERC20 _token) private {\n\n        uint256 balance = _token.balanceOf(address(this));\n\n\n\n        // Check if balance is valid\n\n        require(balance > 0, \"Balance to burn should be > 0\");\n\n        \n\n        _token.burn(balance);\n\n\n\n        emit TokenBurned(_bidId, address(_token), balance);\n\n\n\n        // Check if balance of the auction contract is empty\n\n        balance = _token.balanceOf(address(this));\n\n        require(balance == 0, \"Burn token failed\");\n",
                    "message": "Function 'LANDAuction._burnTokens' (LANDAuction.sol#938-951) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 938,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _burnTokens(uint256 _bidId, ERC20 _token) private {\n",
                    "message": "Parameter '_bidId' of LANDAuction._burnTokens (LANDAuction.sol#938) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 938,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _burnTokens(uint256 _bidId, ERC20 _token) private {\n",
                    "message": "Parameter '_token' of LANDAuction._burnTokens (LANDAuction.sol#938) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 959,
                    "vulnerability_to_line": 976,
                    "vulnerability_code": "    function _forwardTokens(uint256 _bidId, address _address, ERC20 _token) private {\n\n        uint256 balance = _token.balanceOf(address(this));\n\n\n\n        // Check if balance is valid\n\n        require(balance > 0, \"Balance to burn should be > 0\");\n\n        \n\n        _token.safeTransfer(_address, balance);\n\n\n\n        emit TokenTransferred(\n\n            _bidId, \n\n            address(_token), \n\n            _address,balance\n\n        );\n\n\n\n        // Check if balance of the auction contract is empty\n\n        balance = _token.balanceOf(address(this));\n\n        require(balance == 0, \"Transfer token failed\");\n",
                    "message": "Function 'LANDAuction._forwardTokens' (LANDAuction.sol#959-976) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 959,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _forwardTokens(uint256 _bidId, address _address, ERC20 _token) private {\n",
                    "message": "Parameter '_bidId' of LANDAuction._forwardTokens (LANDAuction.sol#959) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 959,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _forwardTokens(uint256 _bidId, address _address, ERC20 _token) private {\n",
                    "message": "Parameter '_address' of LANDAuction._forwardTokens (LANDAuction.sol#959) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 959,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _forwardTokens(uint256 _bidId, address _address, ERC20 _token) private {\n",
                    "message": "Parameter '_token' of LANDAuction._forwardTokens (LANDAuction.sol#959) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 982,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setConversionFee(uint256 _fee) external onlyOwner {\n",
                    "message": "Parameter '_fee' of LANDAuction.setConversionFee (LANDAuction.sol#982) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1006,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setLandsLimitPerBid(uint256 _landsLimitPerBid) public onlyOwner {\n",
                    "message": "Parameter '_landsLimitPerBid' of LANDAuction.setLandsLimitPerBid (LANDAuction.sol#1006) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1016,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setGasPriceLimit(uint256 _gasPriceLimit) public onlyOwner {\n",
                    "message": "Parameter '_gasPriceLimit' of LANDAuction.setGasPriceLimit (LANDAuction.sol#1016) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1026,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setDex(address _dex) public onlyOwner {\n",
                    "message": "Parameter '_dex' of LANDAuction.setDex (LANDAuction.sol#1026) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1046,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _address,\n",
                    "message": "Parameter '_address' of LANDAuction.allowToken (LANDAuction.sol#1046) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1047,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _decimals,\n",
                    "message": "Parameter '_decimals' of LANDAuction.allowToken (LANDAuction.sol#1047) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1048,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        bool _shouldBurnTokens,\n",
                    "message": "Parameter '_shouldBurnTokens' of LANDAuction.allowToken (LANDAuction.sol#1048) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1049,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        bool _shouldForwardTokens,\n",
                    "message": "Parameter '_shouldForwardTokens' of LANDAuction.allowToken (LANDAuction.sol#1049) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1050,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _forwardTarget\n",
                    "message": "Parameter '_forwardTarget' of LANDAuction.allowToken (LANDAuction.sol#1050) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1100,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function disableToken(address _address) public onlyOwner {\n",
                    "message": "Parameter '_address' of LANDAuction.disableToken (LANDAuction.sol#1100) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1115,
                    "vulnerability_to_line": 1140,
                    "vulnerability_code": "    function _setCurve(uint256[] _xPoints, uint256[] _yPoints) internal {\n\n        uint256 pointsLength = _xPoints.length;\n\n        require(pointsLength == _yPoints.length, \"Points should have the same length\");\n\n        for (uint256 i = 0; i < pointsLength - 1; i++) {\n\n            uint256 x1 = _xPoints[i];\n\n            uint256 x2 = _xPoints[i + 1];\n\n            uint256 y1 = _yPoints[i];\n\n            uint256 y2 = _yPoints[i + 1];\n\n            require(x1 < x2, \"X points should increase\");\n\n            require(y1 > y2, \"Y points should decrease\");\n\n            (uint256 base, uint256 slope) = _getFunc(\n\n                x1, \n\n                x2, \n\n                y1, \n\n                y2\n\n            );\n\n            curves.push(Func({\n\n                base: base,\n\n                slope: slope,\n\n                limit: x2\n\n            }));\n\n        }\n\n\n\n        initialPrice = _yPoints[0];\n\n        endPrice = _yPoints[pointsLength - 1];\n",
                    "message": "Function 'LANDAuction._setCurve' (LANDAuction.sol#1115-1140) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1115,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _setCurve(uint256[] _xPoints, uint256[] _yPoints) internal {\n",
                    "message": "Parameter '_xPoints' of LANDAuction._setCurve (LANDAuction.sol#1115) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1115,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _setCurve(uint256[] _xPoints, uint256[] _yPoints) internal {\n",
                    "message": "Parameter '_yPoints' of LANDAuction._setCurve (LANDAuction.sol#1115) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1156,
                    "vulnerability_to_line": 1165,
                    "vulnerability_code": "    function _getFunc(\n\n        uint256 _x1,\n\n        uint256 _x2,\n\n        uint256 _y1, \n\n        uint256 _y2\n\n    ) internal pure returns (uint256 base, uint256 slope) \n\n    {\n\n        base = ((_x2.mul(_y1)).sub(_x1.mul(_y2))).div(_x2.sub(_x1));\n\n        slope = (_y1.sub(_y2)).div(_x2.sub(_x1));\n",
                    "message": "Function 'LANDAuction._getFunc' (LANDAuction.sol#1156-1165) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1157,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _x1,\n",
                    "message": "Parameter '_x1' of LANDAuction._getFunc (LANDAuction.sol#1157) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1158,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _x2,\n",
                    "message": "Parameter '_x2' of LANDAuction._getFunc (LANDAuction.sol#1158) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1159,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _y1, \n",
                    "message": "Parameter '_y1' of LANDAuction._getFunc (LANDAuction.sol#1159) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1160,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _y2\n",
                    "message": "Parameter '_y2' of LANDAuction._getFunc (LANDAuction.sol#1160) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1171,
                    "vulnerability_to_line": 1173,
                    "vulnerability_code": "    function _getBidId() private view returns (uint256) {\n\n        return totalBids;\n",
                    "message": "Function 'LANDAuction._getBidId' (LANDAuction.sol#1171-1173) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1180,
                    "vulnerability_to_line": 1187,
                    "vulnerability_code": "    function _normalizeDecimals(\n\n        uint256 _decimals, \n\n        uint256 _value\n\n    ) \n\n    internal pure returns (uint256 _result) \n\n    {\n\n        _result = _value.div(10**MAX_DECIMALS.sub(_decimals));\n",
                    "message": "Function 'LANDAuction._normalizeDecimals' (LANDAuction.sol#1180-1187) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1181,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _decimals, \n",
                    "message": "Parameter '_decimals' of LANDAuction._normalizeDecimals (LANDAuction.sol#1181) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1182,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _value\n",
                    "message": "Parameter '_value' of LANDAuction._normalizeDecimals (LANDAuction.sol#1182) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1197,
                    "vulnerability_to_line": 1201,
                    "vulnerability_code": "    function _updateStats(uint256 _landsBidded, uint256 _manaAmountBurned) private {\n\n        totalBids = totalBids.add(1);\n\n        totalLandsBidded = totalLandsBidded.add(_landsBidded);\n\n        totalManaBurned = totalManaBurned.add(_manaAmountBurned);\n",
                    "message": "Function 'LANDAuction._updateStats' (LANDAuction.sol#1197-1201) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1197,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _updateStats(uint256 _landsBidded, uint256 _manaAmountBurned) private {\n",
                    "message": "Parameter '_landsBidded' of LANDAuction._updateStats (LANDAuction.sol#1197) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 1197,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _updateStats(uint256 _landsBidded, uint256 _manaAmountBurned) private {\n",
                    "message": "Parameter '_manaAmountBurned' of LANDAuction._updateStats (LANDAuction.sol#1197) is not in mixedCase\n"
                },
                {
                    "name": "unused-state",
                    "vulnerability_from_line": 139,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  uint256[50] private ______gap;\n",
                    "message": "Ownable.______gap (LANDAuction.sol#139) is never used in LANDAuction\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_ADDRESS_HARDCODED",
                    "vulnerability_from_line": 118,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    _owner = address(0);\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_ADDRESS_HARDCODED",
                    "vulnerability_from_line": 607,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        allowToken(\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_DIV_MUL",
                    "vulnerability_from_line": 873,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        return _totalPrice.mul(_tokenRate)\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
                    "vulnerability_from_line": 727,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < _xs.length; i++) {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
                    "vulnerability_from_line": 924,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < curves.length; i++) {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
                    "vulnerability_from_line": 727,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < _xs.length; i++) {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
                    "vulnerability_from_line": 924,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < curves.length; i++) {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_OVERPOWERED_ROLE",
                    "vulnerability_from_line": 982,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setConversionFee(uint256 _fee) external onlyOwner {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_OVERPOWERED_ROLE",
                    "vulnerability_from_line": 1006,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setLandsLimitPerBid(uint256 _landsLimitPerBid) public onlyOwner {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_OVERPOWERED_ROLE",
                    "vulnerability_from_line": 1016,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setGasPriceLimit(uint256 _gasPriceLimit) public onlyOwner {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_OVERPOWERED_ROLE",
                    "vulnerability_from_line": 1026,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function setDex(address _dex) public onlyOwner {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity ^0.4.24;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
                    "vulnerability_from_line": 24,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  bool private initialized;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
                    "vulnerability_from_line": 29,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  bool private initializing;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
                    "vulnerability_from_line": 59,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  uint256[50] private ______gap;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
                    "vulnerability_from_line": 70,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  address private _owner;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
                    "vulnerability_from_line": 139,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  uint256[50] private ______gap;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SAFEMATH",
                    "vulnerability_from_line": 384,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    using SafeMath for uint256;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SAFEMATH",
                    "vulnerability_from_line": 559,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    using SafeMath for uint256;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
                    "vulnerability_from_line": 47,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  function isConstructor() private view returns (bool) {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
                    "vulnerability_from_line": 222,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  function isContract(address account) internal view returns (bool) {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 1161,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    ) internal pure returns (uint256 base, uint256 slope) \n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 577,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256[] _xPoints, \n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 578,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256[] _yPoints, \n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 709,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        int[] _xs, \n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 710,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        int[] _ys, \n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 1115,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _setCurve(uint256[] _xPoints, uint256[] _yPoints) internal {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UPGRADE_TO_050",
                    "vulnerability_from_line": 1115,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function _setCurve(uint256[] _xPoints, uint256[] _yPoints) internal {\n",
                    "message": null
                }
            ]
        }
    },
    "land-auction-master/full/KyberConverter.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 280,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor (IKyberNetwork _kyber, address _walletId) public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 281,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        kyber = _kyber;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 282,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        walletId = _walletId;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 283,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    }\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 177,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(prevBalance >= _value, \"Insufficient funds\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 187,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(prevBalance - _value == _token.balanceOf(address(this)), \"Transfer failed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 208,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(prevBalance >= _value, \"Insufficient funds\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 209,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_token.allowance(_from, address(this)) >= _value, \"Insufficient allowance\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 219,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(prevBalance - _value == _token.balanceOf(_from), \"Transfer failed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 245,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_token.allowance(address(this), _spender) == _value, \"Approve failed\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 297,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 298,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _srcToken.safeTransferFrom(msg.sender, address(this), _srcAmount),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 299,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Could not transfer _srcToken to this contract\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 300,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 303,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 304,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _srcToken.safeApprove(kyber, _srcAmount),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 305,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Could not approve kyber to use _srcToken on behalf of this contract\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 306,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 321,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 322,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _srcToken.clearApprove(kyber),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 323,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Could not clear approval of kyber to use _srcToken on behalf of this contract\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 324,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 327,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(amount == _destAmount, \"Amount bought is not equal to dest amount\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 333,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 334,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                _srcToken.safeTransfer(msg.sender, change),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 335,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"Could not transfer change to sender\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 336,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 341,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 342,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _destToken.safeTransfer(msg.sender, amount),\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 343,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Could not transfer amount of _destToken to msg.sender\"\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 344,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-nested-if",
                    "vulnerability_from_line": 353,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        if (expectedRate == 0 && address(_srcToken) == ManaToken) {\n",
                    "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-nested-if",
                    "vulnerability_from_line": 354,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            (expectedRate, slippageRate) = kyber.getExpectedRate(_srcToken, _destToken, 1);\n",
                    "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-nested-if",
                    "vulnerability_from_line": 355,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        }\n",
                    "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 297,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 298,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _srcToken.safeTransferFrom(msg.sender, address(this), _srcAmount),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 299,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Could not transfer _srcToken to this contract\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 300,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 303,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 304,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _srcToken.safeApprove(kyber, _srcAmount),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 305,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Could not approve kyber to use _srcToken on behalf of this contract\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 306,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 321,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 322,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _srcToken.clearApprove(kyber),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 323,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Could not clear approval of kyber to use _srcToken on behalf of this contract\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 324,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 327,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(amount == _destAmount, \"Amount bought is not equal to dest amount\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 333,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 334,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                _srcToken.safeTransfer(msg.sender, change),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 335,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "                \"Could not transfer change to sender\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 336,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 341,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 342,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            _destToken.safeTransfer(msg.sender, amount),\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 343,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            \"Could not transfer amount of _destToken to msg.sender\"\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 344,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        );\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_31"
            ],
            "vulnerability_findings": [
                {
                    "name": "incorrect-equality",
                    "vulnerability_from_line": 174,
                    "vulnerability_to_line": 190,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n\n        uint256 prevBalance = _token.balanceOf(address(this));\n\n\n\n        require(prevBalance >= _value, \"Insufficient funds\");\n\n\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _value)\n\n        );\n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(prevBalance - _value == _token.balanceOf(address(this)), \"Transfer failed\");\n\n\n\n        return true;\n",
                    "message": "SafeERC20.safeTransfer (KyberConverter.sol#174-190) uses a dangerous strict equality:\n\t- require(bool,string)(prevBalance - _value == _token.balanceOf(address(this)),Transfer failed)\n"
                },
                {
                    "name": "incorrect-equality",
                    "vulnerability_from_line": 174,
                    "vulnerability_to_line": 190,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n\n        uint256 prevBalance = _token.balanceOf(address(this));\n\n\n\n        require(prevBalance >= _value, \"Insufficient funds\");\n\n\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _value)\n\n        );\n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(prevBalance - _value == _token.balanceOf(address(this)), \"Transfer failed\");\n\n\n\n        return true;\n",
                    "message": "SafeERC20.safeTransfer (KyberConverter.sol#174-190) uses a dangerous strict equality:\n\t- require(bool,string)(prevBalance - _value == _token.balanceOf(address(this)),Transfer failed)\nSafeERC20.safeTransferFrom (KyberConverter.sol#199-222) uses a dangerous strict equality:\n\t- require(bool,string)(prevBalance - _value == _token.balanceOf(_from),Transfer failed)\n"
                },
                {
                    "name": "constable-states",
                    "vulnerability_from_line": 278,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    address public ManaToken = 0x0F5D2fB29fb7d3CFeE444a200298f468908cC942;\n",
                    "message": "KyberConverter.ManaToken should be constant (KyberConverter.sol#278)\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 349,
                    "vulnerability_to_line": 356,
                    "vulnerability_code": "    function getExpectedRate(IERC20 _srcToken, IERC20 _destToken, uint256 _srcAmount) \n\n    public view returns(uint256 expectedRate, uint256 slippageRate) \n\n    {\n\n        (expectedRate, slippageRate) = kyber.getExpectedRate(_srcToken, _destToken, 1);\n\n        if (expectedRate == 0 && address(_srcToken) == ManaToken) {\n\n            (expectedRate, slippageRate) = kyber.getExpectedRate(_srcToken, _destToken, 1);\n\n        }\n",
                    "message": "KyberConverter.getExpectedRate (KyberConverter.sol#349-356) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 135,
                    "vulnerability_to_line": 136,
                    "vulnerability_code": "    function getExpectedRate(IERC20 _srcToken, IERC20 _destToken, uint256 _srcAmount) \n",
                    "message": "ITokenConverter.getExpectedRate (KyberConverter.sol#135-136) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 142,
                    "vulnerability_to_line": 151,
                    "vulnerability_code": "    function trade(\n\n        IERC20 _srcToken,\n\n        uint _srcAmount,\n\n        IERC20 _destToken,\n\n        address _destAddress, \n\n        uint _maxDestAmount,\t\n\n        uint _minConversionRate,\t\n\n        address _walletId\n\n        ) \n",
                    "message": "IKyberNetwork.trade (KyberConverter.sol#142-151) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 153,
                    "vulnerability_to_line": 154,
                    "vulnerability_code": "    function getExpectedRate(IERC20 _srcToken, IERC20 _destToken, uint _srcAmount) \n",
                    "message": "IKyberNetwork.getExpectedRate (KyberConverter.sol#153-154) should be declared external\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 174,
                    "vulnerability_to_line": 190,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n\n        uint256 prevBalance = _token.balanceOf(address(this));\n\n\n\n        require(prevBalance >= _value, \"Insufficient funds\");\n\n\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _value)\n\n        );\n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(prevBalance - _value == _token.balanceOf(address(this)), \"Transfer failed\");\n\n\n\n        return true;\n",
                    "message": "Low level call in SafeERC20.safeTransfer (KyberConverter.sol#174-190):\n\t-success = address(_token).call(abi.encodeWithSignature(transfer(address,uint256),_to,_value)) KyberConverter.sol#179-181\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 199,
                    "vulnerability_to_line": 222,
                    "vulnerability_code": "    function safeTransferFrom(\n\n        IERC20 _token,\n\n        address _from,\n\n        address _to, \n\n        uint256 _value\n\n    ) internal returns (bool) \n\n    {\n\n        uint256 prevBalance = _token.balanceOf(_from);\n\n\n\n        require(prevBalance >= _value, \"Insufficient funds\");\n\n        require(_token.allowance(_from, address(this)) >= _value, \"Insufficient allowance\");\n\n\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"transferFrom(address,address,uint256)\", _from, _to, _value)\n\n        );\n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(prevBalance - _value == _token.balanceOf(_from), \"Transfer failed\");\n\n\n\n        return true;\n",
                    "message": "Low level call in SafeERC20.safeTransferFrom (KyberConverter.sol#199-222):\n\t-success = address(_token).call(abi.encodeWithSignature(transferFrom(address,address,uint256),_from,_to,_value)) KyberConverter.sol#211-213\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 236,
                    "vulnerability_to_line": 248,
                    "vulnerability_code": "    function safeApprove(IERC20 _token, address _spender, uint256 _value) internal returns (bool) {\n\n        bool success = address(_token).call(\n\n            abi.encodeWithSignature(\"approve(address,uint256)\",_spender, _value)\n\n        ); \n\n\n\n        if (!success) {\n\n            return false;\n\n        }\n\n\n\n        require(_token.allowance(address(this), _spender) == _value, \"Approve failed\");\n\n\n\n        return true;\n",
                    "message": "Low level call in SafeERC20.safeApprove (KyberConverter.sol#236-248):\n\t-success = address(_token).call(abi.encodeWithSignature(approve(address,uint256),_spender,_value)) KyberConverter.sol#237-239\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 174,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_token' of SafeERC20.safeTransfer (KyberConverter.sol#174) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 174,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_to' of SafeERC20.safeTransfer (KyberConverter.sol#174) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 174,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeTransfer(IERC20 _token, address _to, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_value' of SafeERC20.safeTransfer (KyberConverter.sol#174) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 200,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        IERC20 _token,\n",
                    "message": "Parameter '_token' of SafeERC20.safeTransferFrom (KyberConverter.sol#200) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 201,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _from,\n",
                    "message": "Parameter '_from' of SafeERC20.safeTransferFrom (KyberConverter.sol#201) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 202,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        address _to, \n",
                    "message": "Parameter '_to' of SafeERC20.safeTransferFrom (KyberConverter.sol#202) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 203,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _value\n",
                    "message": "Parameter '_value' of SafeERC20.safeTransferFrom (KyberConverter.sol#203) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 236,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeApprove(IERC20 _token, address _spender, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_token' of SafeERC20.safeApprove (KyberConverter.sol#236) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 236,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeApprove(IERC20 _token, address _spender, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_spender' of SafeERC20.safeApprove (KyberConverter.sol#236) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 236,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function safeApprove(IERC20 _token, address _spender, uint256 _value) internal returns (bool) {\n",
                    "message": "Parameter '_value' of SafeERC20.safeApprove (KyberConverter.sol#236) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 256,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function clearApprove(IERC20 _token, address _spender) internal returns (bool) {\n",
                    "message": "Parameter '_token' of SafeERC20.clearApprove (KyberConverter.sol#256) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 256,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function clearApprove(IERC20 _token, address _spender) internal returns (bool) {\n",
                    "message": "Parameter '_spender' of SafeERC20.clearApprove (KyberConverter.sol#256) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 286,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        IERC20 _srcToken,\n",
                    "message": "Parameter '_srcToken' of KyberConverter.convert (KyberConverter.sol#286) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 287,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        IERC20 _destToken,\n",
                    "message": "Parameter '_destToken' of KyberConverter.convert (KyberConverter.sol#287) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 288,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _srcAmount,\n",
                    "message": "Parameter '_srcAmount' of KyberConverter.convert (KyberConverter.sol#288) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 289,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256 _destAmount\n",
                    "message": "Parameter '_destAmount' of KyberConverter.convert (KyberConverter.sol#289) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 349,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function getExpectedRate(IERC20 _srcToken, IERC20 _destToken, uint256 _srcAmount) \n",
                    "message": "Parameter '_srcToken' of KyberConverter.getExpectedRate (KyberConverter.sol#349) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 349,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function getExpectedRate(IERC20 _srcToken, IERC20 _destToken, uint256 _srcAmount) \n",
                    "message": "Parameter '_destToken' of KyberConverter.getExpectedRate (KyberConverter.sol#349) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 280,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor (IKyberNetwork _kyber, address _walletId) public {\n",
                    "message": "Parameter '_kyber' of KyberConverter. (KyberConverter.sol#280) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 280,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor (IKyberNetwork _kyber, address _walletId) public {\n",
                    "message": "Parameter '_walletId' of KyberConverter. (KyberConverter.sol#280) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 278,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    address public ManaToken = 0x0F5D2fB29fb7d3CFeE444a200298f468908cC942;\n",
                    "message": "Variable 'KyberConverter.ManaToken' (KyberConverter.sol#278) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_ADDRESS_HARDCODED",
                    "vulnerability_from_line": 278,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    address public ManaToken = 0x0F5D2fB29fb7d3CFeE444a200298f468908cC942;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_LOCKED_MONEY",
                    "vulnerability_from_line": 141,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "contract IKyberNetwork {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity ^0.4.24;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SAFEMATH",
                    "vulnerability_from_line": 109,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    using SafeMath for uint256;\n",
                    "message": null
                }
            ]
        }
    },
    "land-auction-master/contracts/utils/Migrations.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 9,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  constructor() public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 10,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    owner = msg.sender;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 11,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  }\n",
                    "message": "Consider making costructor payable to save gas."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_5"
            ],
            "vulnerability_findings": [
                {
                    "name": "external-function",
                    "vulnerability_from_line": 17,
                    "vulnerability_to_line": 19,
                    "vulnerability_code": "  function setCompleted(uint completed) public restricted {\n\n    last_completed_migration = completed;\n",
                    "message": "Migrations.setCompleted (Migrations.sol#17-19) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 21,
                    "vulnerability_to_line": 24,
                    "vulnerability_code": "  function upgrade(address new_address) public restricted {\n\n    Migrations upgraded = Migrations(new_address);\n\n    upgraded.setCompleted(last_completed_migration);\n",
                    "message": "Migrations.upgrade (Migrations.sol#21-24) should be declared external\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity ^0.4.23;\n",
                    "message": "Detected issues with version pragma in Migrations.sol:\n\t- pragma solidity^0.4.23 (Migrations.sol#3): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 21,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  function upgrade(address new_address) public restricted {\n",
                    "message": "Parameter 'new_address' of Migrations.upgrade (Migrations.sol#21) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 7,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  uint public last_completed_migration;\n",
                    "message": "Variable 'Migrations.last_completed_migration' (Migrations.sol#7) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity ^0.4.23;\n",
                    "message": null
                }
            ]
        }
    }
}