{
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/GasPool.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in GasPool.sol:\n\t- pragma solidity0.6.11 (GasPool.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Migrations.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 15,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  constructor() public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 16,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    owner = msg.sender;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 17,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  }\n",
                    "message": "Consider making costructor payable to save gas."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_5"
            ],
            "vulnerability_findings": [
                {
                    "name": "external-function",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": 21,
                    "vulnerability_code": "  function setCompleted(uint completed) public restricted {\n\n    last_completed_migration = completed;\n",
                    "message": "Migrations.setCompleted (Migrations.sol#19-21) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 23,
                    "vulnerability_to_line": 26,
                    "vulnerability_code": "  function upgrade(address new_address) public restricted {\n\n    Migrations upgraded = Migrations(new_address);\n\n    upgraded.setCompleted(last_completed_migration);\n",
                    "message": "Migrations.upgrade (Migrations.sol#23-26) should be declared external\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in Migrations.sol:\n\t- pragma solidity0.6.11 (Migrations.sol#5): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 23,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  function upgrade(address new_address) public restricted {\n",
                    "message": "Parameter 'new_address' of Migrations.upgrade (Migrations.sol#23) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 9,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "  uint public last_completed_migration;\n",
                    "message": "Variable 'Migrations.last_completed_migration' (Migrations.sol#9) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/LPRewards/Dependencies/Address.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 56,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 60,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(success, \"Address: unable to send value, recipient may have reverted\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 117,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 118,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(isContract(target), \"Address: call to non-contract\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 142,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(isContract(target), \"Address: static call to non-contract\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 60,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(success, \"Address: unable to send value, recipient may have reverted\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 117,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 142,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(isContract(target), \"Address: static call to non-contract\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                }
            ]
        },
        "slither": {
            "successfull_analysis": false,
            "errors": [
                "EXIT_CODE_255",
                "error parsing results: file could not be opened successfully:\n- method gz: ReadError('empty file')\n- method bz2: ReadError('not a bzip2 file')\n- method xz: ReadError('not an lzma file')\n- method tar: ReadError('empty file')"
            ],
            "vulnerability_findings": []
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity >=0.6.2 <0.8.0;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_PRAGMAS_VERSION",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity >=0.6.2 <0.8.0;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
                    "vulnerability_from_line": 28,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function isContract(address account) internal view returns (bool) {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 55,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function sendValue(address payable recipient, uint256 amount) internal {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 55,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function sendValue(address payable recipient, uint256 amount) internal {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 55,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function sendValue(address payable recipient, uint256 amount) internal {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 56,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 56,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 56,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 56,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 59,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        (bool success, ) = recipient.call{ value: amount }(\"\");\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 59,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        (bool success, ) = recipient.call{ value: amount }(\"\");\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 59,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        (bool success, ) = recipient.call{ value: amount }(\"\");\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/LPRewards/Interfaces/IUnipool.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in IUnipool.sol:\n\t- pragma solidity0.6.11 (IUnipool.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/LPRewards/Interfaces/ILPTokenWrapper.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in ILPTokenWrapper.sol:\n\t- pragma solidity0.6.11 (ILPTokenWrapper.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/IERC20.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in IERC20.sol:\n\t- pragma solidity0.6.11 (IERC20.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/CheckContract.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 14,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(_account != address(0), \"Account cannot be zero address\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(size > 0, \"Account code size cannot be zero\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_4"
            ],
            "vulnerability_findings": [
                {
                    "name": "constant-function",
                    "vulnerability_from_line": 13,
                    "vulnerability_to_line": 20,
                    "vulnerability_code": "    function checkContract(address _account) internal view {\n\n        require(_account != address(0), \"Account cannot be zero address\");\n\n\n\n        uint256 size;\n\n        // solhint-disable-next-line no-inline-assembly\n\n        assembly { size := extcodesize(_account) }\n\n        require(size > 0, \"Account code size cannot be zero\");\n",
                    "message": "CheckContract.checkContract (CheckContract.sol#13-20) is declared view but contains assembly code\n"
                },
                {
                    "name": "assembly",
                    "vulnerability_from_line": 13,
                    "vulnerability_to_line": 20,
                    "vulnerability_code": "    function checkContract(address _account) internal view {\n\n        require(_account != address(0), \"Account cannot be zero address\");\n\n\n\n        uint256 size;\n\n        // solhint-disable-next-line no-inline-assembly\n\n        assembly { size := extcodesize(_account) }\n\n        require(size > 0, \"Account code size cannot be zero\");\n",
                    "message": "CheckContract.checkContract uses assembly (CheckContract.sol#13-20)\n\t- CheckContract.sol#18\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in CheckContract.sol:\n\t- pragma solidity0.6.11 (CheckContract.sol#5): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 13,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function checkContract(address _account) internal view {\n",
                    "message": "Parameter '_account' of CheckContract.checkContract (CheckContract.sol#13) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
                    "vulnerability_from_line": 13,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function checkContract(address _account) internal view {\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/IERC2612.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in IERC2612.sol:\n\t- pragma solidity0.6.11 (IERC2612.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/BaseMath.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 4,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in BaseMath.sol:\n\t- pragma solidity0.6.11 (BaseMath.sol#4): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/ITellor.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 4,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in ITellor.sol:\n\t- pragma solidity0.6.11 (ITellor.sol#4): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 156,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        returns (\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 179,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        returns (uint256[5] memory idsOnDeck, uint256[5] memory tipsOnDeck);\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 289,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        returns (\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 308,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        returns (\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 345,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function getLastNewValue() external view returns (uint256, bool);\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 355,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        returns (uint256, bool);\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 454,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        returns (\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 472,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        returns (uint256, uint256);\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 514,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        returns (\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 68,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function submitMiningSolution(\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 80,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function proposeOwnership(address payable _pendingOwner) external;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 70,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256[5] calldata _requestId,\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 71,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        uint256[5] calldata _value\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/Ownable.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 27,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor () internal {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 28,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _owner = msg.sender;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 29,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        emit OwnershipTransferred(address(0), msg.sender);\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 30,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    }\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 43,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(isOwner(), \"Ownable: caller is not the owner\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_3"
            ],
            "vulnerability_findings": [
                {
                    "name": "external-function",
                    "vulnerability_from_line": 35,
                    "vulnerability_to_line": 37,
                    "vulnerability_code": "    function owner() public view returns (address) {\n\n        return _owner;\n",
                    "message": "Ownable.owner (Ownable.sol#35-37) should be declared external\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in Ownable.sol:\n\t- pragma solidity0.6.11 (Ownable.sol#5): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 64,
                    "vulnerability_to_line": 68,
                    "vulnerability_code": "    function _renounceOwnership() internal {\n\n        emit OwnershipTransferred(_owner, address(0));\n\n        _owner = address(0);\n\n    }\n",
                    "message": "Function 'Ownable._renounceOwnership' (Ownable.sol#64-68) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_ADDRESS_HARDCODED",
                    "vulnerability_from_line": 66,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        _owner = address(0);\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    address private _owner;\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/SafeMath.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 35,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(c >= a, \"SafeMath: addition overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 89,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(c / a == b, \"SafeMath: multiplication overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 89,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(c / a == b, \"SafeMath: multiplication overflow\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in SafeMath.sol:\n\t- pragma solidity0.6.11 (SafeMath.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/AggregatorV3Interface.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 6,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in AggregatorV3Interface.sol:\n\t- pragma solidity0.6.11 (AggregatorV3Interface.sol#6): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    returns (\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 31,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    returns (\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/LiquitySafeMath128.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 12,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(c >= a, \"LiquitySafeMath128: addition overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-custom-error-not-require",
                    "vulnerability_from_line": 18,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(b <= a, \"LiquitySafeMath128: subtraction overflow\");\n",
                    "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 12,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(c >= a, \"LiquitySafeMath128: addition overflow\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                },
                {
                    "name": "use-short-revert-string",
                    "vulnerability_from_line": 18,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(b <= a, \"LiquitySafeMath128: subtraction overflow\");\n",
                    "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in LiquitySafeMath128.sol:\n\t- pragma solidity0.6.11 (LiquitySafeMath128.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Dependencies/console.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "DOCKER_CMD_NOT_EXECUTABLE"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in console.sol:\n\t- pragma solidity0.6.11 (console.sol#5): it allows old versions\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 11,
                    "vulnerability_to_line": 14,
                    "vulnerability_code": "\tfunction log() internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log()\"));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#11-14):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log())) console.sol#12\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 14,
                    "vulnerability_to_line": 17,
                    "vulnerability_code": "\t}\tfunction logInt(int p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(int)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logInt (console.sol#14-17):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(int),p0)) console.sol#15\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": 22,
                    "vulnerability_code": "\tfunction logUint(uint p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logUint (console.sol#19-22):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint),p0)) console.sol#20\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 24,
                    "vulnerability_to_line": 27,
                    "vulnerability_code": "\tfunction logString(string memory p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logString (console.sol#24-27):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string),p0)) console.sol#25\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 29,
                    "vulnerability_to_line": 32,
                    "vulnerability_code": "\tfunction logBool(bool p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBool (console.sol#29-32):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool),p0)) console.sol#30\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 34,
                    "vulnerability_to_line": 37,
                    "vulnerability_code": "\tfunction logAddress(address p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logAddress (console.sol#34-37):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address),p0)) console.sol#35\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 39,
                    "vulnerability_to_line": 42,
                    "vulnerability_code": "\tfunction logBytes(bytes memory p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes (console.sol#39-42):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes),p0)) console.sol#40\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 44,
                    "vulnerability_to_line": 47,
                    "vulnerability_code": "\tfunction logByte(byte p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(byte)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logByte (console.sol#44-47):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(byte),p0)) console.sol#45\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 49,
                    "vulnerability_to_line": 52,
                    "vulnerability_code": "\tfunction logBytes1(bytes1 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes1)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes1 (console.sol#49-52):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes1),p0)) console.sol#50\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 54,
                    "vulnerability_to_line": 57,
                    "vulnerability_code": "\tfunction logBytes2(bytes2 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes2)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes2 (console.sol#54-57):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes2),p0)) console.sol#55\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 59,
                    "vulnerability_to_line": 62,
                    "vulnerability_code": "\tfunction logBytes3(bytes3 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes3)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes3 (console.sol#59-62):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes3),p0)) console.sol#60\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 64,
                    "vulnerability_to_line": 67,
                    "vulnerability_code": "\tfunction logBytes4(bytes4 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes4)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes4 (console.sol#64-67):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes4),p0)) console.sol#65\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 69,
                    "vulnerability_to_line": 72,
                    "vulnerability_code": "\tfunction logBytes5(bytes5 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes5)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes5 (console.sol#69-72):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes5),p0)) console.sol#70\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 74,
                    "vulnerability_to_line": 77,
                    "vulnerability_code": "\tfunction logBytes6(bytes6 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes6)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes6 (console.sol#74-77):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes6),p0)) console.sol#75\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 79,
                    "vulnerability_to_line": 82,
                    "vulnerability_code": "\tfunction logBytes7(bytes7 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes7)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes7 (console.sol#79-82):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes7),p0)) console.sol#80\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 84,
                    "vulnerability_to_line": 87,
                    "vulnerability_code": "\tfunction logBytes8(bytes8 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes8)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes8 (console.sol#84-87):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes8),p0)) console.sol#85\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 89,
                    "vulnerability_to_line": 92,
                    "vulnerability_code": "\tfunction logBytes9(bytes9 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes9)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes9 (console.sol#89-92):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes9),p0)) console.sol#90\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 94,
                    "vulnerability_to_line": 97,
                    "vulnerability_code": "\tfunction logBytes10(bytes10 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes10)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes10 (console.sol#94-97):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes10),p0)) console.sol#95\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 99,
                    "vulnerability_to_line": 102,
                    "vulnerability_code": "\tfunction logBytes11(bytes11 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes11)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes11 (console.sol#99-102):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes11),p0)) console.sol#100\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 104,
                    "vulnerability_to_line": 107,
                    "vulnerability_code": "\tfunction logBytes12(bytes12 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes12)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes12 (console.sol#104-107):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes12),p0)) console.sol#105\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 109,
                    "vulnerability_to_line": 112,
                    "vulnerability_code": "\tfunction logBytes13(bytes13 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes13)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes13 (console.sol#109-112):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes13),p0)) console.sol#110\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 114,
                    "vulnerability_to_line": 117,
                    "vulnerability_code": "\tfunction logBytes14(bytes14 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes14)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes14 (console.sol#114-117):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes14),p0)) console.sol#115\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 119,
                    "vulnerability_to_line": 122,
                    "vulnerability_code": "\tfunction logBytes15(bytes15 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes15)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes15 (console.sol#119-122):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes15),p0)) console.sol#120\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 124,
                    "vulnerability_to_line": 127,
                    "vulnerability_code": "\tfunction logBytes16(bytes16 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes16)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes16 (console.sol#124-127):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes16),p0)) console.sol#125\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 129,
                    "vulnerability_to_line": 132,
                    "vulnerability_code": "\tfunction logBytes17(bytes17 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes17)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes17 (console.sol#129-132):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes17),p0)) console.sol#130\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 134,
                    "vulnerability_to_line": 137,
                    "vulnerability_code": "\tfunction logBytes18(bytes18 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes18)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes18 (console.sol#134-137):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes18),p0)) console.sol#135\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 139,
                    "vulnerability_to_line": 142,
                    "vulnerability_code": "\tfunction logBytes19(bytes19 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes19)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes19 (console.sol#139-142):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes19),p0)) console.sol#140\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 144,
                    "vulnerability_to_line": 147,
                    "vulnerability_code": "\tfunction logBytes20(bytes20 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes20)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes20 (console.sol#144-147):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes20),p0)) console.sol#145\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 149,
                    "vulnerability_to_line": 152,
                    "vulnerability_code": "\tfunction logBytes21(bytes21 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes21)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes21 (console.sol#149-152):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes21),p0)) console.sol#150\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 154,
                    "vulnerability_to_line": 157,
                    "vulnerability_code": "\tfunction logBytes22(bytes22 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes22)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes22 (console.sol#154-157):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes22),p0)) console.sol#155\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 159,
                    "vulnerability_to_line": 162,
                    "vulnerability_code": "\tfunction logBytes23(bytes23 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes23)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes23 (console.sol#159-162):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes23),p0)) console.sol#160\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 164,
                    "vulnerability_to_line": 167,
                    "vulnerability_code": "\tfunction logBytes24(bytes24 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes24)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes24 (console.sol#164-167):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes24),p0)) console.sol#165\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 169,
                    "vulnerability_to_line": 172,
                    "vulnerability_code": "\tfunction logBytes25(bytes25 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes25)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes25 (console.sol#169-172):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes25),p0)) console.sol#170\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 174,
                    "vulnerability_to_line": 177,
                    "vulnerability_code": "\tfunction logBytes26(bytes26 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes26)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes26 (console.sol#174-177):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes26),p0)) console.sol#175\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 179,
                    "vulnerability_to_line": 182,
                    "vulnerability_code": "\tfunction logBytes27(bytes27 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes27)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes27 (console.sol#179-182):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes27),p0)) console.sol#180\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 184,
                    "vulnerability_to_line": 187,
                    "vulnerability_code": "\tfunction logBytes28(bytes28 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes28)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes28 (console.sol#184-187):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes28),p0)) console.sol#185\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 189,
                    "vulnerability_to_line": 192,
                    "vulnerability_code": "\tfunction logBytes29(bytes29 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes29)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes29 (console.sol#189-192):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes29),p0)) console.sol#190\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 194,
                    "vulnerability_to_line": 197,
                    "vulnerability_code": "\tfunction logBytes30(bytes30 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes30)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes30 (console.sol#194-197):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes30),p0)) console.sol#195\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 199,
                    "vulnerability_to_line": 202,
                    "vulnerability_code": "\tfunction logBytes31(bytes31 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes31)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes31 (console.sol#199-202):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes31),p0)) console.sol#200\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 204,
                    "vulnerability_to_line": 207,
                    "vulnerability_code": "\tfunction logBytes32(bytes32 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes32)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.logBytes32 (console.sol#204-207):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bytes32),p0)) console.sol#205\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 209,
                    "vulnerability_to_line": 212,
                    "vulnerability_code": "\tfunction log(uint p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#209-212):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint),p0)) console.sol#210\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 214,
                    "vulnerability_to_line": 217,
                    "vulnerability_code": "\tfunction log(string memory p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#214-217):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string),p0)) console.sol#215\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 219,
                    "vulnerability_to_line": 222,
                    "vulnerability_code": "\tfunction log(bool p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#219-222):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool),p0)) console.sol#220\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 224,
                    "vulnerability_to_line": 227,
                    "vulnerability_code": "\tfunction log(address p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address)\", p0));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#224-227):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address),p0)) console.sol#225\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 229,
                    "vulnerability_to_line": 232,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#229-232):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint),p0,p1)) console.sol#230\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 234,
                    "vulnerability_to_line": 237,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#234-237):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string),p0,p1)) console.sol#235\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 239,
                    "vulnerability_to_line": 242,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#239-242):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool),p0,p1)) console.sol#240\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 244,
                    "vulnerability_to_line": 247,
                    "vulnerability_code": "\tfunction log(uint p0, address p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#244-247):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address),p0,p1)) console.sol#245\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 249,
                    "vulnerability_to_line": 252,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#249-252):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint),p0,p1)) console.sol#250\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 254,
                    "vulnerability_to_line": 257,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#254-257):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string),p0,p1)) console.sol#255\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 259,
                    "vulnerability_to_line": 262,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#259-262):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool),p0,p1)) console.sol#260\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 264,
                    "vulnerability_to_line": 267,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#264-267):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address),p0,p1)) console.sol#265\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 269,
                    "vulnerability_to_line": 272,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#269-272):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint),p0,p1)) console.sol#270\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 274,
                    "vulnerability_to_line": 277,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#274-277):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string),p0,p1)) console.sol#275\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 279,
                    "vulnerability_to_line": 282,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#279-282):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool),p0,p1)) console.sol#280\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 284,
                    "vulnerability_to_line": 287,
                    "vulnerability_code": "\tfunction log(bool p0, address p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#284-287):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address),p0,p1)) console.sol#285\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 289,
                    "vulnerability_to_line": 292,
                    "vulnerability_code": "\tfunction log(address p0, uint p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#289-292):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint),p0,p1)) console.sol#290\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 294,
                    "vulnerability_to_line": 297,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#294-297):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string),p0,p1)) console.sol#295\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 299,
                    "vulnerability_to_line": 302,
                    "vulnerability_code": "\tfunction log(address p0, bool p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#299-302):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool),p0,p1)) console.sol#300\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 304,
                    "vulnerability_to_line": 307,
                    "vulnerability_code": "\tfunction log(address p0, address p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address)\", p0, p1));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#304-307):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address),p0,p1)) console.sol#305\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 309,
                    "vulnerability_to_line": 312,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#309-312):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,uint),p0,p1,p2)) console.sol#310\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 314,
                    "vulnerability_to_line": 317,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#314-317):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,string),p0,p1,p2)) console.sol#315\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 319,
                    "vulnerability_to_line": 322,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#319-322):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,bool),p0,p1,p2)) console.sol#320\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 324,
                    "vulnerability_to_line": 327,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#324-327):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,address),p0,p1,p2)) console.sol#325\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 329,
                    "vulnerability_to_line": 332,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#329-332):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,uint),p0,p1,p2)) console.sol#330\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 334,
                    "vulnerability_to_line": 337,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#334-337):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,string),p0,p1,p2)) console.sol#335\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 339,
                    "vulnerability_to_line": 342,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#339-342):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,bool),p0,p1,p2)) console.sol#340\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 344,
                    "vulnerability_to_line": 347,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#344-347):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,address),p0,p1,p2)) console.sol#345\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 349,
                    "vulnerability_to_line": 352,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#349-352):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,uint),p0,p1,p2)) console.sol#350\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 354,
                    "vulnerability_to_line": 357,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#354-357):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,string),p0,p1,p2)) console.sol#355\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 359,
                    "vulnerability_to_line": 362,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#359-362):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,bool),p0,p1,p2)) console.sol#360\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 364,
                    "vulnerability_to_line": 367,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#364-367):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,address),p0,p1,p2)) console.sol#365\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 369,
                    "vulnerability_to_line": 372,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#369-372):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,uint),p0,p1,p2)) console.sol#370\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 374,
                    "vulnerability_to_line": 377,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#374-377):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,string),p0,p1,p2)) console.sol#375\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 379,
                    "vulnerability_to_line": 382,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#379-382):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,bool),p0,p1,p2)) console.sol#380\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 384,
                    "vulnerability_to_line": 387,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#384-387):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,address),p0,p1,p2)) console.sol#385\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 389,
                    "vulnerability_to_line": 392,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#389-392):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,uint),p0,p1,p2)) console.sol#390\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 394,
                    "vulnerability_to_line": 397,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#394-397):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,string),p0,p1,p2)) console.sol#395\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 399,
                    "vulnerability_to_line": 402,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#399-402):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,bool),p0,p1,p2)) console.sol#400\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 404,
                    "vulnerability_to_line": 407,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#404-407):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,address),p0,p1,p2)) console.sol#405\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 409,
                    "vulnerability_to_line": 412,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#409-412):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,uint),p0,p1,p2)) console.sol#410\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 414,
                    "vulnerability_to_line": 417,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#414-417):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,string),p0,p1,p2)) console.sol#415\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 419,
                    "vulnerability_to_line": 422,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#419-422):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,bool),p0,p1,p2)) console.sol#420\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 424,
                    "vulnerability_to_line": 427,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#424-427):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,address),p0,p1,p2)) console.sol#425\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 429,
                    "vulnerability_to_line": 432,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#429-432):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,uint),p0,p1,p2)) console.sol#430\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 434,
                    "vulnerability_to_line": 437,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#434-437):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,string),p0,p1,p2)) console.sol#435\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 439,
                    "vulnerability_to_line": 442,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#439-442):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,bool),p0,p1,p2)) console.sol#440\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 444,
                    "vulnerability_to_line": 447,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#444-447):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,address),p0,p1,p2)) console.sol#445\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 449,
                    "vulnerability_to_line": 452,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#449-452):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,uint),p0,p1,p2)) console.sol#450\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 454,
                    "vulnerability_to_line": 457,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#454-457):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,string),p0,p1,p2)) console.sol#455\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 459,
                    "vulnerability_to_line": 462,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#459-462):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,bool),p0,p1,p2)) console.sol#460\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 464,
                    "vulnerability_to_line": 467,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#464-467):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,address),p0,p1,p2)) console.sol#465\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 469,
                    "vulnerability_to_line": 472,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#469-472):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,uint),p0,p1,p2)) console.sol#470\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 474,
                    "vulnerability_to_line": 477,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#474-477):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,string),p0,p1,p2)) console.sol#475\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 479,
                    "vulnerability_to_line": 482,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#479-482):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,bool),p0,p1,p2)) console.sol#480\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 484,
                    "vulnerability_to_line": 487,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#484-487):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,address),p0,p1,p2)) console.sol#485\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 489,
                    "vulnerability_to_line": 492,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#489-492):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,uint),p0,p1,p2)) console.sol#490\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 494,
                    "vulnerability_to_line": 497,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#494-497):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,string),p0,p1,p2)) console.sol#495\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 499,
                    "vulnerability_to_line": 502,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#499-502):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,bool),p0,p1,p2)) console.sol#500\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 504,
                    "vulnerability_to_line": 507,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#504-507):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,address),p0,p1,p2)) console.sol#505\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 509,
                    "vulnerability_to_line": 512,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#509-512):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,uint),p0,p1,p2)) console.sol#510\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 514,
                    "vulnerability_to_line": 517,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#514-517):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,string),p0,p1,p2)) console.sol#515\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 519,
                    "vulnerability_to_line": 522,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#519-522):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,bool),p0,p1,p2)) console.sol#520\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 524,
                    "vulnerability_to_line": 527,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#524-527):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,address),p0,p1,p2)) console.sol#525\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 529,
                    "vulnerability_to_line": 532,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#529-532):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,uint),p0,p1,p2)) console.sol#530\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 534,
                    "vulnerability_to_line": 537,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#534-537):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,string),p0,p1,p2)) console.sol#535\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 539,
                    "vulnerability_to_line": 542,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#539-542):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,bool),p0,p1,p2)) console.sol#540\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 544,
                    "vulnerability_to_line": 547,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#544-547):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,address),p0,p1,p2)) console.sol#545\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 549,
                    "vulnerability_to_line": 552,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#549-552):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,uint),p0,p1,p2)) console.sol#550\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 554,
                    "vulnerability_to_line": 557,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#554-557):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,string),p0,p1,p2)) console.sol#555\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 559,
                    "vulnerability_to_line": 562,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#559-562):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,bool),p0,p1,p2)) console.sol#560\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 564,
                    "vulnerability_to_line": 567,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#564-567):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,address),p0,p1,p2)) console.sol#565\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 569,
                    "vulnerability_to_line": 572,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#569-572):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,uint),p0,p1,p2)) console.sol#570\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 574,
                    "vulnerability_to_line": 577,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#574-577):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,string),p0,p1,p2)) console.sol#575\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 579,
                    "vulnerability_to_line": 582,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#579-582):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,bool),p0,p1,p2)) console.sol#580\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 584,
                    "vulnerability_to_line": 587,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#584-587):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,address),p0,p1,p2)) console.sol#585\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 589,
                    "vulnerability_to_line": 592,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#589-592):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,uint),p0,p1,p2)) console.sol#590\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 594,
                    "vulnerability_to_line": 597,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#594-597):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,string),p0,p1,p2)) console.sol#595\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 599,
                    "vulnerability_to_line": 602,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#599-602):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,bool),p0,p1,p2)) console.sol#600\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 604,
                    "vulnerability_to_line": 607,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#604-607):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,address),p0,p1,p2)) console.sol#605\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 609,
                    "vulnerability_to_line": 612,
                    "vulnerability_code": "\tfunction log(address p0, address p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#609-612):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,uint),p0,p1,p2)) console.sol#610\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 614,
                    "vulnerability_to_line": 617,
                    "vulnerability_code": "\tfunction log(address p0, address p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#614-617):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,string),p0,p1,p2)) console.sol#615\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 619,
                    "vulnerability_to_line": 622,
                    "vulnerability_code": "\tfunction log(address p0, address p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#619-622):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,bool),p0,p1,p2)) console.sol#620\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 624,
                    "vulnerability_to_line": 627,
                    "vulnerability_code": "\tfunction log(address p0, address p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address)\", p0, p1, p2));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#624-627):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,address),p0,p1,p2)) console.sol#625\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 629,
                    "vulnerability_to_line": 632,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#629-632):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,uint,uint),p0,p1,p2,p3)) console.sol#630\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 634,
                    "vulnerability_to_line": 637,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#634-637):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,uint,string),p0,p1,p2,p3)) console.sol#635\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 639,
                    "vulnerability_to_line": 642,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#639-642):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,uint,bool),p0,p1,p2,p3)) console.sol#640\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 644,
                    "vulnerability_to_line": 647,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#644-647):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,uint,address),p0,p1,p2,p3)) console.sol#645\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 649,
                    "vulnerability_to_line": 652,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#649-652):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,string,uint),p0,p1,p2,p3)) console.sol#650\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 654,
                    "vulnerability_to_line": 657,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#654-657):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,string,string),p0,p1,p2,p3)) console.sol#655\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 659,
                    "vulnerability_to_line": 662,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#659-662):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,string,bool),p0,p1,p2,p3)) console.sol#660\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 664,
                    "vulnerability_to_line": 667,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#664-667):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,string,address),p0,p1,p2,p3)) console.sol#665\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 669,
                    "vulnerability_to_line": 672,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#669-672):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,bool,uint),p0,p1,p2,p3)) console.sol#670\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 674,
                    "vulnerability_to_line": 677,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#674-677):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,bool,string),p0,p1,p2,p3)) console.sol#675\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 679,
                    "vulnerability_to_line": 682,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#679-682):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,bool,bool),p0,p1,p2,p3)) console.sol#680\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 684,
                    "vulnerability_to_line": 687,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#684-687):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,bool,address),p0,p1,p2,p3)) console.sol#685\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 689,
                    "vulnerability_to_line": 692,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#689-692):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,address,uint),p0,p1,p2,p3)) console.sol#690\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 694,
                    "vulnerability_to_line": 697,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#694-697):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,address,string),p0,p1,p2,p3)) console.sol#695\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 699,
                    "vulnerability_to_line": 702,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#699-702):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,address,bool),p0,p1,p2,p3)) console.sol#700\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 704,
                    "vulnerability_to_line": 707,
                    "vulnerability_code": "\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#704-707):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,uint,address,address),p0,p1,p2,p3)) console.sol#705\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 709,
                    "vulnerability_to_line": 712,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#709-712):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,uint,uint),p0,p1,p2,p3)) console.sol#710\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 714,
                    "vulnerability_to_line": 717,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#714-717):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,uint,string),p0,p1,p2,p3)) console.sol#715\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 719,
                    "vulnerability_to_line": 722,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#719-722):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,uint,bool),p0,p1,p2,p3)) console.sol#720\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 724,
                    "vulnerability_to_line": 727,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#724-727):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,uint,address),p0,p1,p2,p3)) console.sol#725\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 729,
                    "vulnerability_to_line": 732,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#729-732):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,string,uint),p0,p1,p2,p3)) console.sol#730\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 734,
                    "vulnerability_to_line": 737,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#734-737):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,string,string),p0,p1,p2,p3)) console.sol#735\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 739,
                    "vulnerability_to_line": 742,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#739-742):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,string,bool),p0,p1,p2,p3)) console.sol#740\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 744,
                    "vulnerability_to_line": 747,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#744-747):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,string,address),p0,p1,p2,p3)) console.sol#745\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 749,
                    "vulnerability_to_line": 752,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#749-752):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,bool,uint),p0,p1,p2,p3)) console.sol#750\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 754,
                    "vulnerability_to_line": 757,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#754-757):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,bool,string),p0,p1,p2,p3)) console.sol#755\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 759,
                    "vulnerability_to_line": 762,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#759-762):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,bool,bool),p0,p1,p2,p3)) console.sol#760\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 764,
                    "vulnerability_to_line": 767,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#764-767):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,bool,address),p0,p1,p2,p3)) console.sol#765\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 769,
                    "vulnerability_to_line": 772,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#769-772):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,address,uint),p0,p1,p2,p3)) console.sol#770\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 774,
                    "vulnerability_to_line": 777,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#774-777):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,address,string),p0,p1,p2,p3)) console.sol#775\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 779,
                    "vulnerability_to_line": 782,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#779-782):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,address,bool),p0,p1,p2,p3)) console.sol#780\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 784,
                    "vulnerability_to_line": 787,
                    "vulnerability_code": "\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#784-787):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,string,address,address),p0,p1,p2,p3)) console.sol#785\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 789,
                    "vulnerability_to_line": 792,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#789-792):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,uint,uint),p0,p1,p2,p3)) console.sol#790\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 794,
                    "vulnerability_to_line": 797,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#794-797):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,uint,string),p0,p1,p2,p3)) console.sol#795\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 799,
                    "vulnerability_to_line": 802,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#799-802):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,uint,bool),p0,p1,p2,p3)) console.sol#800\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 804,
                    "vulnerability_to_line": 807,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#804-807):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,uint,address),p0,p1,p2,p3)) console.sol#805\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 809,
                    "vulnerability_to_line": 812,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#809-812):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,string,uint),p0,p1,p2,p3)) console.sol#810\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 814,
                    "vulnerability_to_line": 817,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#814-817):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,string,string),p0,p1,p2,p3)) console.sol#815\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 819,
                    "vulnerability_to_line": 822,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#819-822):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,string,bool),p0,p1,p2,p3)) console.sol#820\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 824,
                    "vulnerability_to_line": 827,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#824-827):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,string,address),p0,p1,p2,p3)) console.sol#825\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 829,
                    "vulnerability_to_line": 832,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#829-832):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,bool,uint),p0,p1,p2,p3)) console.sol#830\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 834,
                    "vulnerability_to_line": 837,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#834-837):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,bool,string),p0,p1,p2,p3)) console.sol#835\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 839,
                    "vulnerability_to_line": 842,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#839-842):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,bool,bool),p0,p1,p2,p3)) console.sol#840\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 844,
                    "vulnerability_to_line": 847,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#844-847):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,bool,address),p0,p1,p2,p3)) console.sol#845\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 849,
                    "vulnerability_to_line": 852,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#849-852):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,address,uint),p0,p1,p2,p3)) console.sol#850\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 854,
                    "vulnerability_to_line": 857,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#854-857):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,address,string),p0,p1,p2,p3)) console.sol#855\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 859,
                    "vulnerability_to_line": 862,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#859-862):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,address,bool),p0,p1,p2,p3)) console.sol#860\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 864,
                    "vulnerability_to_line": 867,
                    "vulnerability_code": "\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#864-867):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,bool,address,address),p0,p1,p2,p3)) console.sol#865\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 869,
                    "vulnerability_to_line": 872,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#869-872):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,uint,uint),p0,p1,p2,p3)) console.sol#870\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 874,
                    "vulnerability_to_line": 877,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#874-877):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,uint,string),p0,p1,p2,p3)) console.sol#875\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 879,
                    "vulnerability_to_line": 882,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#879-882):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,uint,bool),p0,p1,p2,p3)) console.sol#880\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 884,
                    "vulnerability_to_line": 887,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#884-887):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,uint,address),p0,p1,p2,p3)) console.sol#885\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 889,
                    "vulnerability_to_line": 892,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#889-892):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,string,uint),p0,p1,p2,p3)) console.sol#890\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 894,
                    "vulnerability_to_line": 897,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#894-897):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,string,string),p0,p1,p2,p3)) console.sol#895\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 899,
                    "vulnerability_to_line": 902,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#899-902):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,string,bool),p0,p1,p2,p3)) console.sol#900\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 904,
                    "vulnerability_to_line": 907,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#904-907):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,string,address),p0,p1,p2,p3)) console.sol#905\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 909,
                    "vulnerability_to_line": 912,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#909-912):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,bool,uint),p0,p1,p2,p3)) console.sol#910\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 914,
                    "vulnerability_to_line": 917,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#914-917):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,bool,string),p0,p1,p2,p3)) console.sol#915\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 919,
                    "vulnerability_to_line": 922,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#919-922):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,bool,bool),p0,p1,p2,p3)) console.sol#920\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 924,
                    "vulnerability_to_line": 927,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#924-927):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,bool,address),p0,p1,p2,p3)) console.sol#925\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 929,
                    "vulnerability_to_line": 932,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#929-932):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,address,uint),p0,p1,p2,p3)) console.sol#930\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 934,
                    "vulnerability_to_line": 937,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#934-937):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,address,string),p0,p1,p2,p3)) console.sol#935\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 939,
                    "vulnerability_to_line": 942,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#939-942):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,address,bool),p0,p1,p2,p3)) console.sol#940\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 944,
                    "vulnerability_to_line": 947,
                    "vulnerability_code": "\tfunction log(uint p0, address p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#944-947):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(uint,address,address,address),p0,p1,p2,p3)) console.sol#945\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 949,
                    "vulnerability_to_line": 952,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#949-952):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,uint,uint),p0,p1,p2,p3)) console.sol#950\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 954,
                    "vulnerability_to_line": 957,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#954-957):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,uint,string),p0,p1,p2,p3)) console.sol#955\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 959,
                    "vulnerability_to_line": 962,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#959-962):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,uint,bool),p0,p1,p2,p3)) console.sol#960\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 964,
                    "vulnerability_to_line": 967,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#964-967):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,uint,address),p0,p1,p2,p3)) console.sol#965\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 969,
                    "vulnerability_to_line": 972,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#969-972):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,string,uint),p0,p1,p2,p3)) console.sol#970\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 974,
                    "vulnerability_to_line": 977,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#974-977):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,string,string),p0,p1,p2,p3)) console.sol#975\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 979,
                    "vulnerability_to_line": 982,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#979-982):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,string,bool),p0,p1,p2,p3)) console.sol#980\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 984,
                    "vulnerability_to_line": 987,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#984-987):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,string,address),p0,p1,p2,p3)) console.sol#985\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 989,
                    "vulnerability_to_line": 992,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#989-992):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,bool,uint),p0,p1,p2,p3)) console.sol#990\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 994,
                    "vulnerability_to_line": 997,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#994-997):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,bool,string),p0,p1,p2,p3)) console.sol#995\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 999,
                    "vulnerability_to_line": 1002,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#999-1002):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,bool,bool),p0,p1,p2,p3)) console.sol#1000\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1004,
                    "vulnerability_to_line": 1007,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1004-1007):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,bool,address),p0,p1,p2,p3)) console.sol#1005\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1009,
                    "vulnerability_to_line": 1012,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1009-1012):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,address,uint),p0,p1,p2,p3)) console.sol#1010\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1014,
                    "vulnerability_to_line": 1017,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1014-1017):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,address,string),p0,p1,p2,p3)) console.sol#1015\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1019,
                    "vulnerability_to_line": 1022,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1019-1022):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,address,bool),p0,p1,p2,p3)) console.sol#1020\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1024,
                    "vulnerability_to_line": 1027,
                    "vulnerability_code": "\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1024-1027):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,uint,address,address),p0,p1,p2,p3)) console.sol#1025\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1029,
                    "vulnerability_to_line": 1032,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1029-1032):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,uint,uint),p0,p1,p2,p3)) console.sol#1030\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1034,
                    "vulnerability_to_line": 1037,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1034-1037):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,uint,string),p0,p1,p2,p3)) console.sol#1035\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1039,
                    "vulnerability_to_line": 1042,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1039-1042):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,uint,bool),p0,p1,p2,p3)) console.sol#1040\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1044,
                    "vulnerability_to_line": 1047,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1044-1047):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,uint,address),p0,p1,p2,p3)) console.sol#1045\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1049,
                    "vulnerability_to_line": 1052,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1049-1052):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,string,uint),p0,p1,p2,p3)) console.sol#1050\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1054,
                    "vulnerability_to_line": 1057,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1054-1057):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,string,string),p0,p1,p2,p3)) console.sol#1055\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1059,
                    "vulnerability_to_line": 1062,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1059-1062):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,string,bool),p0,p1,p2,p3)) console.sol#1060\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1064,
                    "vulnerability_to_line": 1067,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1064-1067):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,string,address),p0,p1,p2,p3)) console.sol#1065\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1069,
                    "vulnerability_to_line": 1072,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1069-1072):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,bool,uint),p0,p1,p2,p3)) console.sol#1070\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1074,
                    "vulnerability_to_line": 1077,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1074-1077):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,bool,string),p0,p1,p2,p3)) console.sol#1075\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1079,
                    "vulnerability_to_line": 1082,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1079-1082):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,bool,bool),p0,p1,p2,p3)) console.sol#1080\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1084,
                    "vulnerability_to_line": 1087,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1084-1087):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,bool,address),p0,p1,p2,p3)) console.sol#1085\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1089,
                    "vulnerability_to_line": 1092,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1089-1092):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,address,uint),p0,p1,p2,p3)) console.sol#1090\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1094,
                    "vulnerability_to_line": 1097,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1094-1097):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,address,string),p0,p1,p2,p3)) console.sol#1095\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1099,
                    "vulnerability_to_line": 1102,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1099-1102):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,address,bool),p0,p1,p2,p3)) console.sol#1100\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1104,
                    "vulnerability_to_line": 1107,
                    "vulnerability_code": "\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1104-1107):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,string,address,address),p0,p1,p2,p3)) console.sol#1105\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1109,
                    "vulnerability_to_line": 1112,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1109-1112):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,uint,uint),p0,p1,p2,p3)) console.sol#1110\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1114,
                    "vulnerability_to_line": 1117,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1114-1117):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,uint,string),p0,p1,p2,p3)) console.sol#1115\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1119,
                    "vulnerability_to_line": 1122,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1119-1122):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,uint,bool),p0,p1,p2,p3)) console.sol#1120\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1124,
                    "vulnerability_to_line": 1127,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1124-1127):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,uint,address),p0,p1,p2,p3)) console.sol#1125\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1129,
                    "vulnerability_to_line": 1132,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1129-1132):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,string,uint),p0,p1,p2,p3)) console.sol#1130\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1134,
                    "vulnerability_to_line": 1137,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1134-1137):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,string,string),p0,p1,p2,p3)) console.sol#1135\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1139,
                    "vulnerability_to_line": 1142,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1139-1142):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,string,bool),p0,p1,p2,p3)) console.sol#1140\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1144,
                    "vulnerability_to_line": 1147,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1144-1147):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,string,address),p0,p1,p2,p3)) console.sol#1145\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1149,
                    "vulnerability_to_line": 1152,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1149-1152):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,bool,uint),p0,p1,p2,p3)) console.sol#1150\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1154,
                    "vulnerability_to_line": 1157,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1154-1157):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,bool,string),p0,p1,p2,p3)) console.sol#1155\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1159,
                    "vulnerability_to_line": 1162,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1159-1162):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,bool,bool),p0,p1,p2,p3)) console.sol#1160\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1164,
                    "vulnerability_to_line": 1167,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1164-1167):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,bool,address),p0,p1,p2,p3)) console.sol#1165\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1169,
                    "vulnerability_to_line": 1172,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1169-1172):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,address,uint),p0,p1,p2,p3)) console.sol#1170\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1174,
                    "vulnerability_to_line": 1177,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1174-1177):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,address,string),p0,p1,p2,p3)) console.sol#1175\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1179,
                    "vulnerability_to_line": 1182,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1179-1182):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,address,bool),p0,p1,p2,p3)) console.sol#1180\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1184,
                    "vulnerability_to_line": 1187,
                    "vulnerability_code": "\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1184-1187):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,bool,address,address),p0,p1,p2,p3)) console.sol#1185\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1189,
                    "vulnerability_to_line": 1192,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1189-1192):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,uint,uint),p0,p1,p2,p3)) console.sol#1190\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1194,
                    "vulnerability_to_line": 1197,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1194-1197):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,uint,string),p0,p1,p2,p3)) console.sol#1195\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1199,
                    "vulnerability_to_line": 1202,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1199-1202):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,uint,bool),p0,p1,p2,p3)) console.sol#1200\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1204,
                    "vulnerability_to_line": 1207,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1204-1207):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,uint,address),p0,p1,p2,p3)) console.sol#1205\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1209,
                    "vulnerability_to_line": 1212,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1209-1212):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,string,uint),p0,p1,p2,p3)) console.sol#1210\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1214,
                    "vulnerability_to_line": 1217,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1214-1217):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,string,string),p0,p1,p2,p3)) console.sol#1215\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1219,
                    "vulnerability_to_line": 1222,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1219-1222):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,string,bool),p0,p1,p2,p3)) console.sol#1220\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1224,
                    "vulnerability_to_line": 1227,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1224-1227):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,string,address),p0,p1,p2,p3)) console.sol#1225\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1229,
                    "vulnerability_to_line": 1232,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1229-1232):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,bool,uint),p0,p1,p2,p3)) console.sol#1230\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1234,
                    "vulnerability_to_line": 1237,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1234-1237):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,bool,string),p0,p1,p2,p3)) console.sol#1235\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1239,
                    "vulnerability_to_line": 1242,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1239-1242):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,bool,bool),p0,p1,p2,p3)) console.sol#1240\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1244,
                    "vulnerability_to_line": 1247,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1244-1247):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,bool,address),p0,p1,p2,p3)) console.sol#1245\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1249,
                    "vulnerability_to_line": 1252,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1249-1252):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,address,uint),p0,p1,p2,p3)) console.sol#1250\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1254,
                    "vulnerability_to_line": 1257,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1254-1257):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,address,string),p0,p1,p2,p3)) console.sol#1255\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1259,
                    "vulnerability_to_line": 1262,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1259-1262):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,address,bool),p0,p1,p2,p3)) console.sol#1260\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1264,
                    "vulnerability_to_line": 1267,
                    "vulnerability_code": "\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1264-1267):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(string,address,address,address),p0,p1,p2,p3)) console.sol#1265\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1269,
                    "vulnerability_to_line": 1272,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1269-1272):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,uint,uint),p0,p1,p2,p3)) console.sol#1270\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1274,
                    "vulnerability_to_line": 1277,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1274-1277):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,uint,string),p0,p1,p2,p3)) console.sol#1275\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1279,
                    "vulnerability_to_line": 1282,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1279-1282):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,uint,bool),p0,p1,p2,p3)) console.sol#1280\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1284,
                    "vulnerability_to_line": 1287,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1284-1287):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,uint,address),p0,p1,p2,p3)) console.sol#1285\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1289,
                    "vulnerability_to_line": 1292,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1289-1292):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,string,uint),p0,p1,p2,p3)) console.sol#1290\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1294,
                    "vulnerability_to_line": 1297,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1294-1297):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,string,string),p0,p1,p2,p3)) console.sol#1295\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1299,
                    "vulnerability_to_line": 1302,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1299-1302):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,string,bool),p0,p1,p2,p3)) console.sol#1300\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1304,
                    "vulnerability_to_line": 1307,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1304-1307):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,string,address),p0,p1,p2,p3)) console.sol#1305\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1309,
                    "vulnerability_to_line": 1312,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1309-1312):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,bool,uint),p0,p1,p2,p3)) console.sol#1310\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1314,
                    "vulnerability_to_line": 1317,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1314-1317):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,bool,string),p0,p1,p2,p3)) console.sol#1315\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1319,
                    "vulnerability_to_line": 1322,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1319-1322):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,bool,bool),p0,p1,p2,p3)) console.sol#1320\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1324,
                    "vulnerability_to_line": 1327,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1324-1327):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,bool,address),p0,p1,p2,p3)) console.sol#1325\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1329,
                    "vulnerability_to_line": 1332,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1329-1332):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,address,uint),p0,p1,p2,p3)) console.sol#1330\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1334,
                    "vulnerability_to_line": 1337,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1334-1337):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,address,string),p0,p1,p2,p3)) console.sol#1335\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1339,
                    "vulnerability_to_line": 1342,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1339-1342):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,address,bool),p0,p1,p2,p3)) console.sol#1340\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1344,
                    "vulnerability_to_line": 1347,
                    "vulnerability_code": "\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1344-1347):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,uint,address,address),p0,p1,p2,p3)) console.sol#1345\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1349,
                    "vulnerability_to_line": 1352,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1349-1352):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,uint,uint),p0,p1,p2,p3)) console.sol#1350\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1354,
                    "vulnerability_to_line": 1357,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1354-1357):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,uint,string),p0,p1,p2,p3)) console.sol#1355\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1359,
                    "vulnerability_to_line": 1362,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1359-1362):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,uint,bool),p0,p1,p2,p3)) console.sol#1360\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1364,
                    "vulnerability_to_line": 1367,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1364-1367):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,uint,address),p0,p1,p2,p3)) console.sol#1365\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1369,
                    "vulnerability_to_line": 1372,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1369-1372):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,string,uint),p0,p1,p2,p3)) console.sol#1370\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1374,
                    "vulnerability_to_line": 1377,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1374-1377):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,string,string),p0,p1,p2,p3)) console.sol#1375\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1379,
                    "vulnerability_to_line": 1382,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1379-1382):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,string,bool),p0,p1,p2,p3)) console.sol#1380\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1384,
                    "vulnerability_to_line": 1387,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1384-1387):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,string,address),p0,p1,p2,p3)) console.sol#1385\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1389,
                    "vulnerability_to_line": 1392,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1389-1392):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,bool,uint),p0,p1,p2,p3)) console.sol#1390\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1394,
                    "vulnerability_to_line": 1397,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1394-1397):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,bool,string),p0,p1,p2,p3)) console.sol#1395\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1399,
                    "vulnerability_to_line": 1402,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1399-1402):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,bool,bool),p0,p1,p2,p3)) console.sol#1400\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1404,
                    "vulnerability_to_line": 1407,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1404-1407):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,bool,address),p0,p1,p2,p3)) console.sol#1405\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1409,
                    "vulnerability_to_line": 1412,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1409-1412):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,address,uint),p0,p1,p2,p3)) console.sol#1410\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1414,
                    "vulnerability_to_line": 1417,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1414-1417):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,address,string),p0,p1,p2,p3)) console.sol#1415\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1419,
                    "vulnerability_to_line": 1422,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1419-1422):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,address,bool),p0,p1,p2,p3)) console.sol#1420\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1424,
                    "vulnerability_to_line": 1427,
                    "vulnerability_code": "\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1424-1427):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,string,address,address),p0,p1,p2,p3)) console.sol#1425\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1429,
                    "vulnerability_to_line": 1432,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1429-1432):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,uint,uint),p0,p1,p2,p3)) console.sol#1430\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1434,
                    "vulnerability_to_line": 1437,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1434-1437):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,uint,string),p0,p1,p2,p3)) console.sol#1435\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1439,
                    "vulnerability_to_line": 1442,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1439-1442):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,uint,bool),p0,p1,p2,p3)) console.sol#1440\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1444,
                    "vulnerability_to_line": 1447,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1444-1447):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,uint,address),p0,p1,p2,p3)) console.sol#1445\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1449,
                    "vulnerability_to_line": 1452,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1449-1452):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,string,uint),p0,p1,p2,p3)) console.sol#1450\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1454,
                    "vulnerability_to_line": 1457,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1454-1457):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,string,string),p0,p1,p2,p3)) console.sol#1455\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1459,
                    "vulnerability_to_line": 1462,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1459-1462):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,string,bool),p0,p1,p2,p3)) console.sol#1460\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1464,
                    "vulnerability_to_line": 1467,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1464-1467):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,string,address),p0,p1,p2,p3)) console.sol#1465\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1469,
                    "vulnerability_to_line": 1472,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1469-1472):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,bool,uint),p0,p1,p2,p3)) console.sol#1470\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1474,
                    "vulnerability_to_line": 1477,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1474-1477):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,bool,string),p0,p1,p2,p3)) console.sol#1475\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1479,
                    "vulnerability_to_line": 1482,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1479-1482):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,bool,bool),p0,p1,p2,p3)) console.sol#1480\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1484,
                    "vulnerability_to_line": 1487,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1484-1487):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,bool,address),p0,p1,p2,p3)) console.sol#1485\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1489,
                    "vulnerability_to_line": 1492,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1489-1492):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,address,uint),p0,p1,p2,p3)) console.sol#1490\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1494,
                    "vulnerability_to_line": 1497,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1494-1497):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,address,string),p0,p1,p2,p3)) console.sol#1495\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1499,
                    "vulnerability_to_line": 1502,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1499-1502):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,address,bool),p0,p1,p2,p3)) console.sol#1500\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1504,
                    "vulnerability_to_line": 1507,
                    "vulnerability_code": "\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1504-1507):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,bool,address,address),p0,p1,p2,p3)) console.sol#1505\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1509,
                    "vulnerability_to_line": 1512,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1509-1512):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,uint,uint),p0,p1,p2,p3)) console.sol#1510\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1514,
                    "vulnerability_to_line": 1517,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1514-1517):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,uint,string),p0,p1,p2,p3)) console.sol#1515\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1519,
                    "vulnerability_to_line": 1522,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1519-1522):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,uint,bool),p0,p1,p2,p3)) console.sol#1520\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1524,
                    "vulnerability_to_line": 1527,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1524-1527):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,uint,address),p0,p1,p2,p3)) console.sol#1525\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1529,
                    "vulnerability_to_line": 1532,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1529-1532):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,string,uint),p0,p1,p2,p3)) console.sol#1530\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1534,
                    "vulnerability_to_line": 1537,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1534-1537):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,string,string),p0,p1,p2,p3)) console.sol#1535\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1539,
                    "vulnerability_to_line": 1542,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1539-1542):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,string,bool),p0,p1,p2,p3)) console.sol#1540\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1544,
                    "vulnerability_to_line": 1547,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1544-1547):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,string,address),p0,p1,p2,p3)) console.sol#1545\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1549,
                    "vulnerability_to_line": 1552,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1549-1552):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,bool,uint),p0,p1,p2,p3)) console.sol#1550\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1554,
                    "vulnerability_to_line": 1557,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1554-1557):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,bool,string),p0,p1,p2,p3)) console.sol#1555\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1559,
                    "vulnerability_to_line": 1562,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1559-1562):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,bool,bool),p0,p1,p2,p3)) console.sol#1560\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1564,
                    "vulnerability_to_line": 1567,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1564-1567):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,bool,address),p0,p1,p2,p3)) console.sol#1565\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1569,
                    "vulnerability_to_line": 1572,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1569-1572):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,address,uint),p0,p1,p2,p3)) console.sol#1570\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1574,
                    "vulnerability_to_line": 1577,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1574-1577):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,address,string),p0,p1,p2,p3)) console.sol#1575\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1579,
                    "vulnerability_to_line": 1582,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1579-1582):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,address,bool),p0,p1,p2,p3)) console.sol#1580\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1584,
                    "vulnerability_to_line": 1587,
                    "vulnerability_code": "\tfunction log(bool p0, address p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1584-1587):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(bool,address,address,address),p0,p1,p2,p3)) console.sol#1585\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1589,
                    "vulnerability_to_line": 1592,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1589-1592):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,uint,uint),p0,p1,p2,p3)) console.sol#1590\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1594,
                    "vulnerability_to_line": 1597,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1594-1597):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,uint,string),p0,p1,p2,p3)) console.sol#1595\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1599,
                    "vulnerability_to_line": 1602,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1599-1602):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,uint,bool),p0,p1,p2,p3)) console.sol#1600\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1604,
                    "vulnerability_to_line": 1607,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1604-1607):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,uint,address),p0,p1,p2,p3)) console.sol#1605\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1609,
                    "vulnerability_to_line": 1612,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1609-1612):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,string,uint),p0,p1,p2,p3)) console.sol#1610\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1614,
                    "vulnerability_to_line": 1617,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1614-1617):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,string,string),p0,p1,p2,p3)) console.sol#1615\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1619,
                    "vulnerability_to_line": 1622,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1619-1622):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,string,bool),p0,p1,p2,p3)) console.sol#1620\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1624,
                    "vulnerability_to_line": 1627,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1624-1627):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,string,address),p0,p1,p2,p3)) console.sol#1625\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1629,
                    "vulnerability_to_line": 1632,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1629-1632):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,bool,uint),p0,p1,p2,p3)) console.sol#1630\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1634,
                    "vulnerability_to_line": 1637,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1634-1637):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,bool,string),p0,p1,p2,p3)) console.sol#1635\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1639,
                    "vulnerability_to_line": 1642,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1639-1642):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,bool,bool),p0,p1,p2,p3)) console.sol#1640\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1644,
                    "vulnerability_to_line": 1647,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1644-1647):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,bool,address),p0,p1,p2,p3)) console.sol#1645\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1649,
                    "vulnerability_to_line": 1652,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1649-1652):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,address,uint),p0,p1,p2,p3)) console.sol#1650\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1654,
                    "vulnerability_to_line": 1657,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1654-1657):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,address,string),p0,p1,p2,p3)) console.sol#1655\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1659,
                    "vulnerability_to_line": 1662,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1659-1662):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,address,bool),p0,p1,p2,p3)) console.sol#1660\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1664,
                    "vulnerability_to_line": 1667,
                    "vulnerability_code": "\tfunction log(address p0, uint p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1664-1667):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,uint,address,address),p0,p1,p2,p3)) console.sol#1665\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1669,
                    "vulnerability_to_line": 1672,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1669-1672):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,uint,uint),p0,p1,p2,p3)) console.sol#1670\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1674,
                    "vulnerability_to_line": 1677,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1674-1677):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,uint,string),p0,p1,p2,p3)) console.sol#1675\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1679,
                    "vulnerability_to_line": 1682,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1679-1682):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,uint,bool),p0,p1,p2,p3)) console.sol#1680\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1684,
                    "vulnerability_to_line": 1687,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1684-1687):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,uint,address),p0,p1,p2,p3)) console.sol#1685\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1689,
                    "vulnerability_to_line": 1692,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1689-1692):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,string,uint),p0,p1,p2,p3)) console.sol#1690\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1694,
                    "vulnerability_to_line": 1697,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1694-1697):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,string,string),p0,p1,p2,p3)) console.sol#1695\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1699,
                    "vulnerability_to_line": 1702,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1699-1702):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,string,bool),p0,p1,p2,p3)) console.sol#1700\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1704,
                    "vulnerability_to_line": 1707,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1704-1707):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,string,address),p0,p1,p2,p3)) console.sol#1705\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1709,
                    "vulnerability_to_line": 1712,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1709-1712):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,bool,uint),p0,p1,p2,p3)) console.sol#1710\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1714,
                    "vulnerability_to_line": 1717,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1714-1717):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,bool,string),p0,p1,p2,p3)) console.sol#1715\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1719,
                    "vulnerability_to_line": 1722,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1719-1722):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,bool,bool),p0,p1,p2,p3)) console.sol#1720\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1724,
                    "vulnerability_to_line": 1727,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1724-1727):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,bool,address),p0,p1,p2,p3)) console.sol#1725\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1729,
                    "vulnerability_to_line": 1732,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1729-1732):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,address,uint),p0,p1,p2,p3)) console.sol#1730\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1734,
                    "vulnerability_to_line": 1737,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1734-1737):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,address,string),p0,p1,p2,p3)) console.sol#1735\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1739,
                    "vulnerability_to_line": 1742,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1739-1742):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,address,bool),p0,p1,p2,p3)) console.sol#1740\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1744,
                    "vulnerability_to_line": 1747,
                    "vulnerability_code": "\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1744-1747):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,string,address,address),p0,p1,p2,p3)) console.sol#1745\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1749,
                    "vulnerability_to_line": 1752,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1749-1752):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,uint,uint),p0,p1,p2,p3)) console.sol#1750\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1754,
                    "vulnerability_to_line": 1757,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1754-1757):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,uint,string),p0,p1,p2,p3)) console.sol#1755\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1759,
                    "vulnerability_to_line": 1762,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1759-1762):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,uint,bool),p0,p1,p2,p3)) console.sol#1760\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1764,
                    "vulnerability_to_line": 1767,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1764-1767):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,uint,address),p0,p1,p2,p3)) console.sol#1765\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1769,
                    "vulnerability_to_line": 1772,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1769-1772):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,string,uint),p0,p1,p2,p3)) console.sol#1770\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1774,
                    "vulnerability_to_line": 1777,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1774-1777):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,string,string),p0,p1,p2,p3)) console.sol#1775\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1779,
                    "vulnerability_to_line": 1782,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1779-1782):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,string,bool),p0,p1,p2,p3)) console.sol#1780\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1784,
                    "vulnerability_to_line": 1787,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1784-1787):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,string,address),p0,p1,p2,p3)) console.sol#1785\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1789,
                    "vulnerability_to_line": 1792,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1789-1792):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,bool,uint),p0,p1,p2,p3)) console.sol#1790\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1794,
                    "vulnerability_to_line": 1797,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1794-1797):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,bool,string),p0,p1,p2,p3)) console.sol#1795\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1799,
                    "vulnerability_to_line": 1802,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1799-1802):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,bool,bool),p0,p1,p2,p3)) console.sol#1800\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1804,
                    "vulnerability_to_line": 1807,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1804-1807):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,bool,address),p0,p1,p2,p3)) console.sol#1805\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1809,
                    "vulnerability_to_line": 1812,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1809-1812):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,address,uint),p0,p1,p2,p3)) console.sol#1810\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1814,
                    "vulnerability_to_line": 1817,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1814-1817):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,address,string),p0,p1,p2,p3)) console.sol#1815\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1819,
                    "vulnerability_to_line": 1822,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1819-1822):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,address,bool),p0,p1,p2,p3)) console.sol#1820\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1824,
                    "vulnerability_to_line": 1827,
                    "vulnerability_code": "\tfunction log(address p0, bool p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1824-1827):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,bool,address,address),p0,p1,p2,p3)) console.sol#1825\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1829,
                    "vulnerability_to_line": 1832,
                    "vulnerability_code": "\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1829-1832):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,uint,uint),p0,p1,p2,p3)) console.sol#1830\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1834,
                    "vulnerability_to_line": 1837,
                    "vulnerability_code": "\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1834-1837):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,uint,string),p0,p1,p2,p3)) console.sol#1835\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1839,
                    "vulnerability_to_line": 1842,
                    "vulnerability_code": "\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1839-1842):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,uint,bool),p0,p1,p2,p3)) console.sol#1840\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1844,
                    "vulnerability_to_line": 1847,
                    "vulnerability_code": "\tfunction log(address p0, address p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1844-1847):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,uint,address),p0,p1,p2,p3)) console.sol#1845\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1849,
                    "vulnerability_to_line": 1852,
                    "vulnerability_code": "\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1849-1852):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,string,uint),p0,p1,p2,p3)) console.sol#1850\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1854,
                    "vulnerability_to_line": 1857,
                    "vulnerability_code": "\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1854-1857):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,string,string),p0,p1,p2,p3)) console.sol#1855\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1859,
                    "vulnerability_to_line": 1862,
                    "vulnerability_code": "\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1859-1862):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,string,bool),p0,p1,p2,p3)) console.sol#1860\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1864,
                    "vulnerability_to_line": 1867,
                    "vulnerability_code": "\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1864-1867):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,string,address),p0,p1,p2,p3)) console.sol#1865\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1869,
                    "vulnerability_to_line": 1872,
                    "vulnerability_code": "\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1869-1872):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,bool,uint),p0,p1,p2,p3)) console.sol#1870\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1874,
                    "vulnerability_to_line": 1877,
                    "vulnerability_code": "\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1874-1877):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,bool,string),p0,p1,p2,p3)) console.sol#1875\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1879,
                    "vulnerability_to_line": 1882,
                    "vulnerability_code": "\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1879-1882):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,bool,bool),p0,p1,p2,p3)) console.sol#1880\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1884,
                    "vulnerability_to_line": 1887,
                    "vulnerability_code": "\tfunction log(address p0, address p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1884-1887):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,bool,address),p0,p1,p2,p3)) console.sol#1885\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1889,
                    "vulnerability_to_line": 1892,
                    "vulnerability_code": "\tfunction log(address p0, address p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1889-1892):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,address,uint),p0,p1,p2,p3)) console.sol#1890\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1894,
                    "vulnerability_to_line": 1897,
                    "vulnerability_code": "\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1894-1897):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,address,string),p0,p1,p2,p3)) console.sol#1895\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1899,
                    "vulnerability_to_line": 1902,
                    "vulnerability_code": "\tfunction log(address p0, address p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1899-1902):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,address,bool),p0,p1,p2,p3)) console.sol#1900\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 1904,
                    "vulnerability_to_line": 1907,
                    "vulnerability_code": "\tfunction log(address p0, address p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n",
                    "message": "Low level call in console.log (console.sol#1904-1907):\n\t-(ignored) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(log(address,address,address,address),p0,p1,p2,p3)) console.sol#1905\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 8,
                    "vulnerability_to_line": 1909,
                    "vulnerability_code": "library console {\n\n\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\n\n\n\n\tfunction log() internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log()\"));\n\n\t\tignored;\n\n\t}\tfunction logInt(int p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(int)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logUint(uint p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logString(string memory p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBool(bool p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logAddress(address p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes(bytes memory p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logByte(byte p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(byte)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes1(bytes1 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes1)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes2(bytes2 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes2)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes3(bytes3 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes3)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes4(bytes4 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes4)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes5(bytes5 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes5)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes6(bytes6 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes6)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes7(bytes7 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes7)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes8(bytes8 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes8)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes9(bytes9 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes9)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes10(bytes10 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes10)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes11(bytes11 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes11)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes12(bytes12 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes12)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes13(bytes13 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes13)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes14(bytes14 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes14)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes15(bytes15 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes15)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes16(bytes16 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes16)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes17(bytes17 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes17)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes18(bytes18 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes18)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes19(bytes19 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes19)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes20(bytes20 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes20)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes21(bytes21 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes21)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes22(bytes22 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes22)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes23(bytes23 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes23)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes24(bytes24 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes24)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes25(bytes25 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes25)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes26(bytes26 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes26)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes27(bytes27 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes27)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes28(bytes28 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes28)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes29(bytes29 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes29)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes30(bytes30 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes30)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes31(bytes31 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes31)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction logBytes32(bytes32 p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes32)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address)\", p0));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address)\", p0, p1));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, uint p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, string memory p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, bool p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, address p2) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address)\", p0, p1, p2));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(uint p0, address p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(bool p0, address p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, uint p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, bool p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, uint p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, bool p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, address p2, uint p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,uint)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,string)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, address p2, bool p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,bool)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n\n\tfunction log(address p0, address p1, address p2, address p3) internal view {\n\n\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,address)\", p0, p1, p2, p3));\n\n\t\tignored;\n\n\t}\n\n\n",
                    "message": "Contract 'console' (console.sol#8-1909) is not in CapWords\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_ADDRESS_HARDCODED",
                    "vulnerability_from_line": 9,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 12,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log()\"));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 15,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(int)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 25,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 30,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 35,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 40,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 45,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(byte)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 50,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes1)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 55,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes2)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 60,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes3)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 65,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes4)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 70,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes5)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 75,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes6)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 80,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes7)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 85,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes8)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 90,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes9)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 95,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes10)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 100,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes11)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 105,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes12)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 110,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes13)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 115,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes14)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 120,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes15)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 125,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes16)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 130,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes17)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 135,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes18)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 140,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes19)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 145,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes20)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 150,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes21)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 155,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes22)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 160,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes23)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 165,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes24)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 170,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes25)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 175,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes26)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 180,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes27)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 185,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes28)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 190,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes29)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 195,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes30)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 200,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes31)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 205,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bytes32)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 210,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 215,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 220,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 225,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 230,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 235,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 240,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 245,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 250,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 255,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 260,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 265,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 270,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 275,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 280,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 285,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 290,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 295,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 300,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 305,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 310,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 315,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 320,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 325,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 330,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 335,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 340,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 345,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 350,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 355,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 360,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 365,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 370,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 375,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 380,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 385,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 390,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 395,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 400,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 405,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 410,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 415,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 420,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 425,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 430,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 435,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 440,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 445,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 450,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 455,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 460,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 465,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 470,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 475,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 480,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 485,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 490,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 495,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 500,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 505,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 510,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 515,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 520,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 525,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 530,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 535,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 540,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 545,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 550,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 555,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 560,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 565,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 570,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 575,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 580,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 585,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 590,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 595,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 600,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 605,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 610,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 615,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 620,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 625,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 630,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 635,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 640,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 645,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 650,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 655,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 660,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 665,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 670,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 675,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 680,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 685,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 690,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 695,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 700,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 705,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 710,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 715,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 720,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 725,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 730,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 735,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 740,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 745,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 750,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 755,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 760,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 765,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 770,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 775,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 780,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 785,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 790,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 795,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 800,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 805,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 810,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 815,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 820,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 825,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 830,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 835,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 840,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 845,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 850,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 855,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 860,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 865,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 870,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 875,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 880,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 885,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 890,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 895,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 900,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 905,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 910,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 915,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 920,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 925,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 930,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 935,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 940,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 945,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 950,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 955,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 960,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 965,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 970,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 975,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 980,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 985,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 990,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 995,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1000,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1005,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1010,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1015,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1020,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1025,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1030,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1035,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1040,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1045,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1050,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1055,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1060,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1065,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1070,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1075,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1080,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1085,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1090,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1095,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1100,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1105,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1110,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1115,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1120,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1125,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1130,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1135,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1140,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1145,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1150,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1155,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1160,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1165,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1170,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1175,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1180,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1185,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1190,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1195,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1200,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1205,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1210,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1215,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1220,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1225,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1230,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1235,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1240,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1245,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1250,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1255,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1260,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1265,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1270,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1275,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1280,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1285,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1290,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1295,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1300,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1305,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1310,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1315,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1320,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1325,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1330,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1335,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1340,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1345,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1350,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1355,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1360,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1365,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1370,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1375,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1380,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1385,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1390,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1395,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1400,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1405,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1410,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1415,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1420,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1425,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1430,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1435,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1440,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1445,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1450,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1455,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1460,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1465,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1470,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1475,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1480,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1485,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1490,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1495,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1500,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1505,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1510,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1515,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1520,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1525,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1530,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1535,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1540,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1545,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1550,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1555,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1560,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1565,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1570,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1575,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1580,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1585,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1590,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1595,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1600,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1605,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1610,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1615,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1620,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1625,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1630,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1635,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1640,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1645,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1650,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1655,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1660,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1665,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1670,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1675,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1680,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1685,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1690,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1695,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1700,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1705,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1710,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1715,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1720,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1725,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1730,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1735,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1740,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1745,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1750,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1755,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1760,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1765,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1770,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1775,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1780,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1785,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1790,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1795,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1800,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1805,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1810,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1815,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1820,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1825,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1830,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1835,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1840,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1845,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1850,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1855,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1860,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1865,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1870,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1875,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1880,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1885,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1890,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1895,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1900,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 1905,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 9,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 15,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(int)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 210,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint)\", p0));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 230,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 235,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 240,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 245,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 250,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 270,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 290,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint)\", p0, p1));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 310,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 315,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 320,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 325,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 330,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 335,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 340,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 345,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 350,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 355,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 360,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 365,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 370,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 375,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 380,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 385,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 390,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 395,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 400,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 405,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 410,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 430,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 450,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 470,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 475,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 480,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 485,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 490,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 510,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 530,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 550,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 555,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 560,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 565,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 570,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 590,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 610,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint)\", p0, p1, p2));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 630,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 635,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 640,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 645,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 650,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 655,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 660,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 665,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 670,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 675,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 680,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 685,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 690,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 695,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 700,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 705,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,uint,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 710,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 715,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 720,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 725,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 730,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 735,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 740,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 745,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 750,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 755,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 760,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 765,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 770,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 775,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 780,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 785,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,string,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 790,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 795,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 800,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 805,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 810,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 815,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 820,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 825,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 830,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 835,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 840,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 845,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 850,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 855,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 860,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 865,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,bool,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 870,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 875,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 880,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 885,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 890,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 895,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 900,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 905,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 910,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 915,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 920,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 925,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 930,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 935,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 940,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 945,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(uint,address,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 950,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 955,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 960,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 965,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 970,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 975,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 980,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 985,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 990,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 995,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1000,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1005,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1010,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1015,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1020,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1025,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,uint,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1030,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1035,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1040,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1045,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1050,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1070,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1090,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,string,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1110,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1115,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1120,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1125,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1130,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1150,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1170,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,bool,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1190,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1195,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1200,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1205,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1210,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1230,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1250,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(string,address,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1270,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1275,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1280,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1285,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1290,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1295,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1300,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1305,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1310,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1315,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1320,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1325,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1330,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1335,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1340,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1345,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,uint,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1350,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1355,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1360,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1365,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1370,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1390,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1410,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,string,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1430,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1435,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1440,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1445,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1450,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1470,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1490,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,bool,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1510,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1515,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1520,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1525,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1530,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1550,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1570,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(bool,address,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1590,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1595,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1600,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1605,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1610,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1615,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1620,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1625,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,string,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1630,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1635,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1640,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1645,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,bool,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1650,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1655,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1660,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1665,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,uint,address,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1670,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1675,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1680,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1685,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1690,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1710,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1730,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,string,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1750,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1755,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1760,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1765,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1770,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1790,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1810,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,bool,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1830,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1835,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,string)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1840,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,bool)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1845,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,uint,address)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1850,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,string,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1870,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,bool,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_WRONG_SIGNATURE",
                    "vulnerability_from_line": 1890,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "\t\t(bool ignored, ) = CONSOLE_ADDRESS.staticcall(abi.encodeWithSignature(\"log(address,address,address,uint)\", p0, p1, p2, p3));\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/TestContracts/NonPayable.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "arbitrary-low-level-call",
                    "vulnerability_from_line": 18,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        (bool success, bytes memory returnData) = _dest.call{ value: msg.value }(_data);\n",
                    "message": "An attacker may perform call() to an arbitrary address with controlled calldata"
                }
            ]
        },
        "slither": {
            "successfull_analysis": false,
            "errors": [
                "EXIT_CODE_255",
                "error parsing results: file could not be opened successfully:\n- method gz: ReadError('empty file')\n- method bz2: ReadError('not a bzip2 file')\n- method xz: ReadError('not an lzma file')\n- method tar: ReadError('empty file')"
            ],
            "vulnerability_findings": []
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_LOCKED_MONEY",
                    "vulnerability_from_line": 10,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "contract NonPayable {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 11,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    bool isPayable;\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 23,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    receive() external payable {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 24,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        require(isPayable);\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/TestContracts/Destructible.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_2"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in Destructible.sol:\n\t- pragma solidity0.6.11 (Destructible.sol#5): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 11,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function destruct(address payable _receiver) external {\n",
                    "message": "Parameter '_receiver' of Destructible.destruct (Destructible.sol#11) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_VISIBILITY",
                    "vulnerability_from_line": 9,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    receive() external payable {}\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/ISortedTroves.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in ISortedTroves.sol:\n\t- pragma solidity0.6.11 (ISortedTroves.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 45,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function findInsertPosition(uint256 _ICR, address _prevId, address _nextId) external view returns (address, address);\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/IBorrowerOperations.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in IBorrowerOperations.sol:\n\t- pragma solidity0.6.11 (IBorrowerOperations.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/ICollSurplusPool.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in ICollSurplusPool.sol:\n\t- pragma solidity0.6.11 (ICollSurplusPool.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/ILQTYStaking.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_3"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in ILQTYStaking.sol:\n\t- pragma solidity0.6.11 (ILQTYStaking.sol#5): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 30,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function increaseF_ETH(uint _ETHFee) external; \n",
                    "message": "Function 'ILQTYStaking.increaseF_ETH' (ILQTYStaking.sol#30) is not in mixedCase\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 32,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function increaseF_LUSD(uint _LQTYFee) external;  \n",
                    "message": "Function 'ILQTYStaking.increaseF_LUSD' (ILQTYStaking.sol#32) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/ILockupContractFactory.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in ILockupContractFactory.sol:\n\t- pragma solidity0.6.11 (ILockupContractFactory.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/ICommunityIssuance.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in ICommunityIssuance.sol:\n\t- pragma solidity0.6.11 (ICommunityIssuance.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/IPool.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in IPool.sol:\n\t- pragma solidity0.6.11 (IPool.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/IPriceFeed.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in IPriceFeed.sol:\n\t- pragma solidity0.6.11 (IPriceFeed.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/ITellorCaller.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_1"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in ITellorCaller.sol:\n\t- pragma solidity0.6.11 (ITellorCaller.sol#5): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 8,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function getTellorCurrentValue(uint256 _requestId) external view returns (bool, uint256, uint256);\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/IStabilityPool.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_4"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in IStabilityPool.sol:\n\t- pragma solidity0.6.11 (IStabilityPool.sol#5): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 23,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    event P_Updated(uint _P);\n",
                    "message": "Event 'IStabilityPool.P_Updated' (IStabilityPool.sol#23) is not in CapWords\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 24,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    event S_Updated(uint _S);\n",
                    "message": "Event 'IStabilityPool.S_Updated' (IStabilityPool.sol#24) is not in CapWords\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 25,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    event G_Updated(uint _G);\n",
                    "message": "Event 'IStabilityPool.G_Updated' (IStabilityPool.sol#25) is not in CapWords\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/Interfaces/ITroveManager.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_2"
            ],
            "vulnerability_findings": [
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 5,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in ITroveManager.sol:\n\t- pragma solidity0.6.11 (ITroveManager.sol#5): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 108,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function getBorrowingFee(uint LUSDDebt) external view returns (uint);\n",
                    "message": "Parameter 'LUSDDebt' of ITroveManager.getBorrowingFee (ITroveManager.sol#108) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
                    "vulnerability_from_line": 93,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    function getEntireDebtAndColl(address _borrower) external view returns (\n",
                    "message": null
                }
            ]
        }
    },
    "dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/providers/multicaller/MultiCaller.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "array-length-outside-loop",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < calls.length; i++) {\n",
                    "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop."
                },
                {
                    "name": "unnecessary-checked-arithmetic-in-loop",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < calls.length; i++) {\n",
                    "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks."
                },
                {
                    "name": "use-prefix-increment-not-postfix",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < calls.length; i++) {\n",
                    "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_5"
            ],
            "vulnerability_findings": [
                {
                    "name": "calls-loop",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            (bool success, bytes memory result) = calls[i].to.staticcall(calls[i].data);\n",
                    "message": "MultiCaller.performMultiple has external calls inside a loop:\n\t- (success,result) = calls[i].to.staticcall(calls[i].data) (MultiCaller.sol#20)\n"
                },
                {
                    "name": "pragma",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Different versions of Solidity is used in MultiCaller.sol:\n\t- Version used: ['0.6.11', 'ABIEncoderV2']\n\t- MultiCaller.sol#3 declares pragma solidity0.6.11\n\t- MultiCaller.sol#4 declares pragma experimentalABIEncoderV2\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 12,
                    "vulnerability_to_line": 24,
                    "vulnerability_code": "    function performMultiple(CallRequest[] memory calls)\n\n        public view returns (\n\n            bytes[] memory results\n\n        )\n\n    {\n\n        results = new bytes[](calls.length);\n\n\n\n        for (uint256 i = 0; i < calls.length; i++) {\n\n            (bool success, bytes memory result) = calls[i].to.staticcall(calls[i].data);\n\n            require(success);\n\n            results[i] = result;\n\n        }\n",
                    "message": "MultiCaller.performMultiple (MultiCaller.sol#12-24) should be declared external\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 3,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.6.11;\n",
                    "message": "Detected issues with version pragma in MultiCaller.sol:\n\t- pragma solidity0.6.11 (MultiCaller.sol#3): it allows old versions\n"
                },
                {
                    "name": "low-level-calls",
                    "vulnerability_from_line": 12,
                    "vulnerability_to_line": 24,
                    "vulnerability_code": "    function performMultiple(CallRequest[] memory calls)\n\n        public view returns (\n\n            bytes[] memory results\n\n        )\n\n    {\n\n        results = new bytes[](calls.length);\n\n\n\n        for (uint256 i = 0; i < calls.length; i++) {\n\n            (bool success, bytes memory result) = calls[i].to.staticcall(calls[i].data);\n\n            require(success);\n\n            results[i] = result;\n\n        }\n",
                    "message": "Low level call in MultiCaller.performMultiple (MultiCaller.sol#12-24):\n\t-(success,result) = calls[i].to.staticcall(calls[i].data) MultiCaller.sol#20\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < calls.length; i++) {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
                    "vulnerability_from_line": 19,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        for (uint256 i = 0; i < calls.length; i++) {\n",
                    "message": null
                },
                {
                    "name": "SOLIDITY_UNCHECKED_CALL",
                    "vulnerability_from_line": 20,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "            (bool success, bytes memory result) = calls[i].to.staticcall(calls[i].data);\n",
                    "message": null
                }
            ]
        }
    }
}